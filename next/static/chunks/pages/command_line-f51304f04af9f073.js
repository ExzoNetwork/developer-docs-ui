(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[877],{6560:function(s,o,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/command_line",function(){return n(7447)}])},3398:function(s,o,n){"use strict";n.d(o,{K:function(){return t}});var a=n(5893),e=n(7294);function t(s){let{width:o,height:n,x:t,y:r,squares:l,...i}=s,p=(0,e.useId)();return(0,a.jsxs)("svg",{"aria-hidden":"true",...i,children:[(0,a.jsx)("defs",{children:(0,a.jsx)("pattern",{id:p,width:o,height:n,patternUnits:"userSpaceOnUse",x:t,y:r,children:(0,a.jsx)("path",{d:`M.5 ${n}V.5H${o}`,fill:"none"})})}),(0,a.jsx)("rect",{width:"100%",height:"100%",strokeWidth:0,fill:`url(#${p})`}),l&&(0,a.jsx)("svg",{x:t,y:r,className:"overflow-visible",children:l.map(s=>{let[e,t]=s;return(0,a.jsx)("rect",{strokeWidth:"0",width:o+1,height:n+1,x:e*o,y:t*n},`${e}-${t}`)})})]})}},7336:function(s,o,n){"use strict";n.d(o,{I:function(){return r}});var a=n(5893),e=n(6109),t=n(5825);function r(s){let{id:o,title:n,level:r,isShow:l,elements:i}=s;return(0,a.jsxs)("div",{className:"xl:max-w-none",children:[(0,a.jsx)(e.X,{level:r,id:o,children:n}),(0,a.jsx)("div",{className:"not-prose mt-4 grid grid-cols-1 gap-8 border-t border-zinc-900/5 pt-4 dark:border-white/5 sm:grid-cols-2 xl:grid-cols-4",children:l&&i.map(s=>(0,a.jsxs)("div",{children:[(0,a.jsx)("h3",{className:"text-sm font-semibold text-zinc-900 dark:text-white",children:s.name}),(0,a.jsx)("p",{className:"mt-1 text-sm text-zinc-600 dark:text-zinc-400",children:s.description}),(0,a.jsx)("p",{className:"mt-4",children:""!==s.href&&(0,a.jsx)(t.z,{href:s.href,variant:"text",arrow:"right",children:"Read more"})})]},s.href))})]})}},4095:function(s,o,n){"use strict";n.d(o,{m:function(){return u}});var a=n(5893),e=n(1664),t=n.n(e),r=n(5675),l=n.n(r),i=n(407);function p(s,...o){let n=s.length;return(0,i.N)(o,function(){let a="";for(let e=0;e<n;e++){a+=s[e];let n=o[e];n&&(a+=o[e].get())}return a})}var c=n(296),k=n(4960),h=n(3398),y=n(6109);function v(s){let{img:o}=s;return(0,a.jsx)("div",{className:"flex h-7 w-7 items-center justify-center rounded-full bg-zinc-900/5 ring-1 ring-zinc-900/25 backdrop-blur-[2px] transition duration-300 group-hover:bg-white/50 group-hover:ring-zinc-900/25 dark:bg-white/7.5 dark:ring-white/15 dark:group-hover:bg-emerald-300/10 dark:group-hover:ring-emerald-400",children:(0,a.jsx)(l(),{src:o,width:20,height:20,alt:"Icon image"})})}function d(s){let{mouseX:o,mouseY:n,...e}=s,t=p`radial-gradient(180px at ${o}px ${n}px, white, transparent)`,r={maskImage:t,WebkitMaskImage:t};return(0,a.jsxs)("div",{className:"pointer-events-none",children:[(0,a.jsx)("div",{className:"absolute inset-0 rounded-2xl transition duration-300 [mask-image:linear-gradient(white,transparent)] group-hover:opacity-50",children:(0,a.jsx)(h.K,{width:72,height:56,x:"50%",className:"absolute inset-x-0 inset-y-[-30%] h-[160%] w-full skew-y-[-18deg] fill-black/[0.02] stroke-black/5 dark:fill-white/1 dark:stroke-white/2.5",...e})}),(0,a.jsx)(c.E.div,{className:"absolute inset-0 rounded-2xl bg-gradient-to-r from-[#D7EDEA] to-[#F4FBDF] opacity-0 transition duration-300 group-hover:opacity-100 dark:from-[#202D2E] dark:to-[#303428]",style:r}),(0,a.jsx)(c.E.div,{className:"absolute inset-0 rounded-2xl opacity-0 mix-blend-overlay transition duration-300 group-hover:opacity-100",style:r,children:(0,a.jsx)(h.K,{width:72,height:56,x:"50%",className:"absolute inset-x-0 inset-y-[-30%] h-[160%] w-full skew-y-[-18deg] fill-black/50 stroke-black/70 dark:fill-white/2.5 dark:stroke-white/10",...e})})]})}function x(s){let{resource:o}=s,n=(0,k.c)(0),e=(0,k.c)(0);return(0,a.jsxs)("div",{onMouseMove:function(s){let{currentTarget:o,clientX:a,clientY:t}=s,{left:r,top:l}=o.getBoundingClientRect();n.set(a-r),e.set(t-l)},className:"group relative flex rounded-2xl bg-zinc-50 transition-shadow hover:shadow-md hover:shadow-zinc-900/5 dark:bg-white/2.5 dark:hover:shadow-black/5",children:[(0,a.jsx)(d,{...o.pattern,mouseX:n,mouseY:e}),(0,a.jsx)("div",{className:"absolute inset-0 rounded-2xl ring-1 ring-inset ring-zinc-900/7.5 group-hover:ring-zinc-900/10 dark:ring-white/10 dark:group-hover:ring-white/20"}),(0,a.jsxs)("div",{className:"relative w-full rounded-2xl px-4 pb-4 pt-14",children:[(0,a.jsx)(v,{img:o.icon}),(0,a.jsx)("h3",{className:"mt-4 text-sm font-semibold leading-7 text-zinc-900 dark:text-white",children:(0,a.jsxs)(t(),{href:o.href,children:[(0,a.jsx)("span",{className:"absolute inset-0 rounded-2xl"}),o.name]})}),(0,a.jsx)("p",{className:"mt-1 text-sm text-zinc-600 dark:text-zinc-400",children:o.description})]})]},o.href)}function u(s){let{id:o,title:n,level:e,elements:t,isHeading:r}=s;return(0,a.jsxs)("div",{className:r?"my-16 xl:max-w-none":"xl:max-w-none",children:[r&&(0,a.jsx)(y.X,{level:e,id:o,children:n}),(0,a.jsx)("div",{className:r?"not-prose mt-4 grid grid-cols-1 gap-8 border-t border-zinc-900/5 pt-10 dark:border-white/5 sm:grid-cols-2 xl:grid-cols-4":"not-prose mt-4 grid grid-cols-1 gap-8 sm:grid-cols-2 xl:grid-cols-4",children:t.map(s=>(0,a.jsx)(x,{resource:s},s.href))})]})}},7447:function(s,o,n){"use strict";n.r(o),n.d(o,{__N_SSG:function(){return c},default:function(){return k}});var a=n(5893),e=n(1151),t=n(7336),r=n(4095),l={src:"/_next/static/media/velas.ebad41bb.ico",height:16,width:16,blurWidth:0,blurHeight:0};let i=[{href:"https://docs.velas.com/cli/usage#velas-create-stake-account",name:"create-stake-account",description:"",icon:l,pattern:{y:16,squares:[[0,1],[1,3]]}},{href:"https://docs.velas.com/cli/usage#velas-deactivate-stake",name:"deactivate-stake",description:"",icon:l,pattern:{y:16,squares:[[0,1],[1,3]]}},{href:"https://docs.velas.com/cli/usage#velas-delegate-stake",name:"delegate-stake",description:"",icon:l,pattern:{y:16,squares:[[0,1],[1,3]]}},{href:"https://docs.velas.com/cli/usage#velas-split-stake",name:"split-stake",description:"",icon:l,pattern:{y:16,squares:[[0,1],[1,3]]}},{href:"https://docs.velas.com/cli/usage#velas-stake-authorize",name:"stake-authorize",description:"",icon:l,pattern:{y:16,squares:[[0,1],[1,3]]}},{href:"https://docs.velas.com/cli/usage#velas-stake-set-lockup",name:"stake-set-lockup",description:"",icon:l,pattern:{y:16,squares:[[0,1],[1,3]]}},{href:"https://docs.velas.com/cli/usage#velas-transfer",name:"transfer",description:"",icon:l,pattern:{y:16,squares:[[0,1],[1,3]]}},{href:"https://docs.velas.com/cli/usage#velas-withdraw-stake",name:"withdraw-stake",description:"",icon:l,pattern:{y:16,squares:[[0,1],[1,3]]}}];function p(s){let o=Object.assign({h1:"h1",p:"p",h2:"h2",ul:"ul",li:"li",h3:"h3",pre:"pre",code:"code",a:"a",ol:"ol"},(0,e.ah)(),s.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.h1,{children:"Command Line",className:"border-b border-zinc-900/5 dark:border-white/5 xl:max-w-none pb-5 mb-7"}),"\n",(0,a.jsx)(t.I,{id:"command_line_guide",title:"Command-line Guide",level:2,isShow:!1}),"\n",(0,a.jsx)(o.p,{children:"In this section, we will describe how to use the Exzo Network command-line tools to create a wallet, to send and receive XZO tokens, and to participate in the cluster by delegating stake."}),"\n",(0,a.jsx)(o.p,{children:"To interact with a Exzo Network cluster, we will use its command-line interface, also known as the CLI. We use the command-line because it is the first place the Exzo Network core team deploys new functionality. The command-line interface is not necessarily the easiest to use, but it provides the most direct, flexible, and secure access to your Exzo Network accounts."}),"\n",(0,a.jsx)(o.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,a.jsx)(o.p,{children:"To get started using the Solana Command Line (CLI) tools:"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Install the Exzo Network Tools"}),"\n",(0,a.jsx)(o.li,{children:"Choose a Cluster"}),"\n",(0,a.jsx)(o.li,{children:"Create a Wallet"}),"\n",(0,a.jsx)(o.li,{children:"Check out our CLI conventions"}),"\n"]}),"\n",(0,a.jsx)(t.I,{id:"exzo_tool_suite",title:"Install the Exzo Network Tool Suite",level:2,isShow:!1}),"\n",(0,a.jsx)(o.p,{children:"There are multiple ways to install the Exzo Network tools on your computer depending on your preferred workflow:"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Use Exzo Network Install Tool"}),"\n",(0,a.jsx)(o.li,{children:"MacOS & Linux"}),"\n",(0,a.jsx)(o.li,{children:"Windows"}),"\n",(0,a.jsx)(o.li,{children:"Download Prebuilt Binaries"}),"\n",(0,a.jsx)(o.li,{children:"Linux"}),"\n",(0,a.jsx)(o.li,{children:"MacOS"}),"\n",(0,a.jsx)(o.li,{children:"Windows"}),"\n",(0,a.jsx)(o.li,{children:"Build From Source"}),"\n"]}),"\n",(0,a.jsx)(o.h2,{id:"use-exzo-network-install-tool",children:"Use Exzo Network Install Tool"}),"\n",(0,a.jsx)(o.h3,{children:"MacOS & Linux"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Open your favorite Terminal application"}),"\n",(0,a.jsx)(o.li,{children:"Install the Exzo Network release LATEST_Exzo Network_RELEASE on your machine by running:"}),"\n"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"curl -sSf https://raw.githubusercontent.com/exzonetwork/exzo-network-blockchain/develop/install/exzonetwork-install-init.sh | sh -s - LATEST_EXZONETWORK_RELEASE\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">curl -sSf https://raw.githubusercontent.com/exzonetwork/exzo-network-blockchain/develop/install/exzonetwork-install-init.sh </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> sh -s - LATEST_EXZONETWORK_RELEASE</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"If you are connecting to a different testnet, you can replace LATEST_EXZONETWORK_RELEASE with the release tag matching the software version of your desired testnet, or replace it with the named channel stable, beta, or edge."}),"\n",(0,a.jsx)(o.li,{children:"The following output indicates a successful update:"}),"\n"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"looking for latest release downloading LATEST_EXZONETWORK_RELEASE installer\r\nConfiguration: /home/exzonetwork/.config/exzonetwork/install/config.yml\r\nActive release directory: /home/exzonetwork/.local/share/exzonetwork/install/active_release\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">looking </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> latest release downloading LATEST_EXZONETWORK_RELEASE installer</span></span>\n<span><span style="color: var(--shiki-color-text)">Configuration: /home/exzonetwork/.config/exzonetwork/install/config.yml</span></span>\n<span><span style="color: var(--shiki-color-text)">Active release directory: /home/exzonetwork/.local/share/exzonetwork/install/active_release</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Release version: LATEST_EXZONETWORK_RELEASE"}),"\n",(0,a.jsxs)(o.li,{children:["Release URL: ",(0,a.jsx)(o.a,{href:"https://github.com/exzonetwork/exzo-network-blockchain/releases/download/LATEST_EXZONETWORK_RELEASE/exzonetwork-release-x86_64-unknown-linux-gnu.tar.bz2",children:"https://github.com/exzonetwork/exzo-network-blockchain/releases/download/LATEST_EXZONETWORK_RELEASE/exzonetwork-release-x86_64-unknown-linux-gnu.tar.bz2"})],className:"break-words"}),"\n"]}),"\n",(0,a.jsx)(o.h3,{children:"Update successful"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Depending on your system, the end of the installer messaging may prompt you to"}),"\n"]}),"\n",(0,a.jsx)(o.p,{children:"Please update your PATH environment variable to include the Exzo Network programs:"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:["If you get the above message, copy and paste the recommended command below it to update ",(0,a.jsx)(o.code,{children:"PATH"})]}),"\n"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:'export PATH="/root/.local/share/exzonetwork/install/active_release/bin:$PATH" to bashrc\n',children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> PATH=</span><span style="color: var(--shiki-token-string-expression)">&quot;/root/.local/share/exzonetwork/install/active_release/bin:$PATH&quot;</span><span style="color: var(--shiki-color-text)"> to bashrc</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:["Confirm you have the desired version of ",(0,a.jsx)(o.code,{children:"exzonetwork"})," installed by running:"]}),"\n"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork --version\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork --version</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:["After a successful install, ",(0,a.jsx)(o.code,{children:"exzonetwork-install update"})," may be used to easily update the Exzo Network software to a newer version at any time."]}),"\n"]}),"\n",(0,a.jsx)(o.h3,{children:"Windows"}),"\n",(0,a.jsx)(o.p,{children:"Open a Command Prompt (cmd.exe) as an Administrator",className:"dark:text-white"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Search for Command Prompt in the Windows search bar. When the Command Prompt app appears, right-click and select “Open as Administrator”. If you are prompted by a pop-up window asking “Do you want to allow this app to make changes to your device?”, click Yes."}),"\n",(0,a.jsx)(o.li,{children:"Copy and paste the following command, then press Enter to download the Exzo Network installer into a temporary directory:"}),"\n"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"curl -L https://github.com/exzonetwork/exzonetwork-chain/releases/download/v0.5.1/exzonetwork-install-init-x86_64-pc-windows-msvc.exe --output C:\\exzo-install-tmp\\exzo-install-init.exe --create-dirs\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">curl -L https://github.com/exzonetwork/exzonetwork-chain/releases/download/v0.5.1/exzonetwork-install-init-x86_64-pc-windows-msvc.exe --output C:\\exzo-install-tmp\\exzo-install-init.exe --create-dirs</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Copy and paste the following command, then press Enter to install the latest stable version of Exzo Network. If you see a security pop-up by your system, please select to allow the program to run."}),"\n"]}),"\n",(0,a.jsx)(o.p,{children:"C:\\exzo-install-tmp\\exzo-install-init.exe stable"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"When the installer is finished, press Enter."}),"\n",(0,a.jsx)(o.li,{children:"Close the command prompt window and re-open a new command prompt window as a normal user"}),"\n",(0,a.jsx)(o.li,{children:'Search for "Command Prompt" in the search bar, then left click on the Command Prompt app icon, no need to run as Administrator)'}),"\n",(0,a.jsxs)(o.li,{children:["Confirm you have the desired version of ",(0,a.jsx)(o.code,{children:"exzo"})," installed by entering:"]}),"\n"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo --version\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo --version</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:["After a successful install, ",(0,a.jsx)(o.code,{children:"exzo-install update"})," may be used to easily update the Exzo Network software to a newer version at any time."]}),"\n"]}),"\n",(0,a.jsx)(o.h2,{id:"download-prebuilt-binaries",children:"Download Prebuilt Binaries"}),"\n",(0,a.jsx)(o.p,{children:"If you would rather not use exzo-install to manage the install, you can manually download and install the binaries."}),"\n",(0,a.jsx)(o.h3,{children:"Linux"}),"\n",(0,a.jsxs)(o.p,{children:["Download the binaries by navigating to ",(0,a.jsx)(o.a,{href:"https://github.com/exzonetwork/exzonetwork-chain/releases/latest",children:"https://github.com/exzonetwork/exzonetwork-chain/releases/latest"}),", download exzonetwork-release-x86_64-unknown-linux-msvc.tar.bz2, then extract the archive:"],className:"break-words"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"tar jxf exzo-release-x86_64-unknown-linux-gnu.tar.bz2\r\ncd exzo-release/\r\nexport PATH=$PWD/bin:$PATH\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">tar jxf exzo-release-x86_64-unknown-linux-gnu.tar.bz2</span></span>\n<span><span style="color: var(--shiki-token-function)">cd</span><span style="color: var(--shiki-color-text)"> exzo-release/</span></span>\n<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> PATH=$PWD/bin:$PATH</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"MacOS"}),"\n",(0,a.jsxs)(o.p,{children:["Download the binaries by navigating to ",(0,a.jsx)(o.a,{href:"https://github.com/exzonetwork/exzo-network-blockchain/releases/latest",children:"https://github.com/exzonetwork/exzo-network-blockchain/releases/latest"}),", download exzonetwork-release-x86_64-apple-darwin.tar.bz2, then extract the archive:"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"tar jxf exzo-release-x86_64-apple-darwin.tar.bz2\r\ncd exzo-release/\r\nexport PATH=$PWD/bin:$PATH\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">tar jxf exzo-release-x86_64-apple-darwin.tar.bz2</span></span>\n<span><span style="color: var(--shiki-token-function)">cd</span><span style="color: var(--shiki-color-text)"> exzo-release/</span></span>\n<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> PATH=$PWD/bin:$PATH</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Windows"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:["Download the binaries by navigating to ",(0,a.jsx)(o.a,{href:"https://github.com/exzonetwork/exzonetwork-chain/releases/latest",children:"https://github.com/exzonetwork/exzonetwork-chain/releases/latest"}),", download exzonetwork-release-x86_64-pc-windows-msvc.tar.bz2, then extract the archive using WinZip or similar."],className:"break-words"}),"\n",(0,a.jsx)(o.li,{children:"Open a Command Prompt and navigate to the directory into which you extracted the binaries and run:"}),"\n"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"cd exzo-release/\r\nset PATH=%cd%/bin;%PATH%\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-token-function)">cd</span><span style="color: var(--shiki-color-text)"> exzo-release/</span></span>\n<span><span style="color: var(--shiki-token-function)">set</span><span style="color: var(--shiki-color-text)"> PATH=%cd%/bin</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)">%PATH%</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h2,{id:"build-from-source",children:"Build From Source"}),"\n",(0,a.jsxs)(o.p,{children:["If you are unable to use the prebuilt binaries or prefer to build it yourself from source, navigate to ",(0,a.jsx)(o.a,{href:"https://github.com/exzonetwork/exzo-network-blockchain/releases/latest",children:"https://github.com/exzonetwork/exzo-network-blockchain/releases/latest"}),", and download the Source Code archive. Extract the code and build the binaries with:"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"./scripts/cargo-install-all.sh .\r\nexport PATH=$PWD/bin:$PATH\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">./scripts/cargo-install-all.sh </span><span style="color: var(--shiki-token-function)">.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> PATH=$PWD/bin:$PATH</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(t.I,{id:"exzo_network_cli",title:"Using Exzo Network CLI",level:2,isShow:!1}),"\n",(0,a.jsx)(o.p,{children:"Before running any Exzo Network CLI commands, let's go over some conventions that you will see across all commands. First, the Exzo Network CLI is actually a collection of different commands for each action you might want to take. You can view the list of all possible commands by running:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo --help\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo --help</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"To zoom in on how to use a particular command, run:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo <COMMAND> --help\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMAND</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --help</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["where you replace the text ",(0,a.jsx)(o.code,{children:"<COMMAND>"})," with the name of the command you want to learn more about."]}),"\n",(0,a.jsxs)(o.p,{children:["The command's usage message will typically contain words such as ",(0,a.jsx)(o.code,{children:"<AMOUNT>"}),", ",(0,a.jsx)(o.code,{children:"<ACCOUNT_ADDRESS>"})," or ",(0,a.jsx)(o.code,{children:"<KEYPAIR>"}),". Each word is a placeholder for the type of text you can execute the command with. For example, you can replace ",(0,a.jsx)(o.code,{children:"<AMOUNT>"})," with a number such as ",(0,a.jsx)(o.code,{children:"42"})," or ",(0,a.jsx)(o.code,{children:"100.42"}),". You can replace ",(0,a.jsx)(o.code,{children:"<ACCOUNT_ADDRESS>"})," with the base58 encoding of your public key, such as ",(0,a.jsx)(o.code,{children:"9grmKMwTiZwUHSExjtbFzHLPTdWoXgcg1bZkhvwTrTww"}),"."]}),"\n",(0,a.jsx)(o.h2,{id:"keypair-conventions",children:"Keypair conventions"}),"\n",(0,a.jsxs)(o.p,{children:["Many commands using the CLI tools require a value for a ",(0,a.jsx)(o.code,{children:"<KEYPAIR>"}),". The value you should use for the keypair depend on what type of command line wallet you created."]}),"\n",(0,a.jsx)(o.p,{children:"For example, the way to display any wallet's address (also known as the keypair's pubkey), the CLI help document shows:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo-keygen pubkey <KEYPAIR>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo-keygen pubkey </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["Below, we show how to resolve what you should put in ",(0,a.jsx)(o.code,{children:"<KEYPAIR>"})," depending on your wallet type."]}),"\n",(0,a.jsx)(o.h3,{children:"Paper Wallet"}),"\n",(0,a.jsxs)(o.p,{children:["In a paper wallet, the keypair is securely derived from the seed words and optional passphrase you entered when the wallet was create. To use a paper wallet keypair anywhere the ",(0,a.jsx)(o.code,{children:"<KEYPAIR>"})," text is shown in examples or help documents, enter the word ",(0,a.jsx)(o.code,{children:"ASK"})," and the program will prompt you to enter your seed words when you run the command."]}),"\n",(0,a.jsx)(o.p,{children:"To display the wallet address of a Paper Wallet:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo-keygen pubkey ASK\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo-keygen pubkey ASK</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"File System Wallet"}),"\n",(0,a.jsxs)(o.p,{children:["With a file system wallet, the keypair is stored in a file on your computer. Replace ",(0,a.jsx)(o.code,{children:"<KEYPAIR>"})," with the complete file path to the keypair file."]}),"\n",(0,a.jsx)(o.p,{children:"For example, if the file system keypair file location is /home/exzo/my_wallet.json, to display the address, do:"}),"\n",(0,a.jsx)(o.p,{children:"Copy"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo-keygen pubkey /home/exzo/my_wallet.json\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo-keygen pubkey /home/exzo/my_wallet.json</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(t.I,{id:"connecting_cluster",title:"Connecting to a Cluster",level:2,isShow:!1}),"\n",(0,a.jsx)(o.p,{children:"See Exzo Network Clusters for general information about the available clusters."}),"\n",(0,a.jsx)(o.h2,{id:"configure-the-command-line-tool",children:"Configure the command-line tool"}),"\n",(0,a.jsx)(o.p,{children:"You can check what cluster the Exzo Network command-line tool (CLI) is currently targeting by running the following command:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo config get\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo config get</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"Use exzonetwork config set command to target a particular cluster. After setting a cluster target, any future subcommands will send/receive information from that cluster."}),"\n",(0,a.jsx)(o.p,{children:"For example to target the Devnet cluster, run:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo config set --url https://rpc-test-1.exzo.network\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo config </span><span style="color: var(--shiki-token-function)">set</span><span style="color: var(--shiki-color-text)"> --url https://rpc-test-1.exzo.network</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h2,{id:"ensure-versions-match",children:"Ensure Versions Match"}),"\n",(0,a.jsx)(o.p,{children:"Though not strictly necessary, the CLI will generally work best when its version matches the software version running on the cluster. To get the locally-installed CLI version, run:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo --version\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo --version</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"To get the cluster version, run:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo cluster-version\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo cluster-version</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"Ensure the local CLI version is greater than or equal to the cluster version."}),"\n",(0,a.jsx)(t.I,{id:"receive_tokens",title:"Send and Receive Tokens",level:2,isShow:!1}),"\n",(0,a.jsx)(o.p,{children:"This page decribes how to receive and send XZO tokens using the command line tools with a command line wallet such as a paper wallet, and a file system wallet. Before you begin, make sure you have created a wallet and have access to its address (pubkey) and the signing keypair. Check out our conventions for entering keypairs for different wallet types."}),"\n",(0,a.jsx)(o.h2,{id:"testing-your-wallet",children:"Testing your Wallet"}),"\n",(0,a.jsx)(o.p,{children:"Before sharing your public key with others, you may want to first ensure the key is valid and that you indeed hold the corresponding private key."}),"\n",(0,a.jsx)(o.p,{children:"In this example, we will create a second wallet in addition to your first wallet, and then transfer some tokens to it. This will confirm that you can send and receive tokens on your wallet type of choice."}),"\n",(0,a.jsx)(o.p,{children:"This test example uses our Developer Testnet, called devnet. Tokens issued on devnet have no value, so don't worry if you lose them."}),"\n",(0,a.jsx)(o.h3,{children:"Airdrop some tokens to get started"}),"\n",(0,a.jsx)(o.p,{children:"First, airdrop yourself some play tokens on the devnet."}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo airdrop 10 <RECIPIENT_ACCOUNT_ADDRESS> --url https://rpc-test-1.exzo.network\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo airdrop 10 </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RECIPIENT_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --url https://rpc-test-1.exzo.network</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["where you replace the text ",(0,a.jsx)(o.code,{children:"<RECIPIENT_ACCOUNT_ADDRESS>"})," with your base58-encoded public key/wallet address."]}),"\n",(0,a.jsx)(o.h3,{children:"Check your balance"}),"\n",(0,a.jsxs)(o.p,{children:["Confirm the airdrop was successful by checking the account's balance. It should output ",(0,a.jsx)(o.code,{children:"10 XZO"}),":"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo balance <ACCOUNT_ADDRESS> --url https://rpc-test-1.exzo.network\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo balance </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --url https://rpc-test-1.exzo.network</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Create a second wallet address"}),"\n",(0,a.jsx)(o.p,{children:"We will need a new address to receive our tokens. Create a second keypair and record its pubkey:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo -keygen new --no-passphrase --no-outfile\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo -keygen new --no-passphrase --no-outfile</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["The output will contain the address after the text ",(0,a.jsx)(o.code,{children:"pubkey:"}),"."]}),"\n",(0,a.jsx)(o.p,{children:"Copy the address. We will use it in the next step."}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"pubkey: GKvqsuNcnwWqPzzuhLmGi4rzzh55FhJtGizkhHaEJqiV\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">pubkey: GKvqsuNcnwWqPzzuhLmGi4rzzh55FhJtGizkhHaEJqiV</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsx)(o.p,{children:"You can also create a second (or more) wallet of any type: paper, file system."}),"\n",(0,a.jsx)(o.h3,{children:"Transfer tokens from your first wallet to the second address"}),"\n",(0,a.jsx)(o.p,{children:"Next, prove that you own the airdropped tokens by transferring them. The Exzo Network cluster will only accept the transfer if you sign the transaction with the private keypair corresponding to the sender's public key in the transaction."}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo transfer --from <KEYPAIR> <RECIPIENT_ACCOUNT_ADDRESS> 5 --url https://rpc-test-1.exzo.network --fee-payer <KEYPAIR>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo transfer --from </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RECIPIENT_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> 5 --url https://rpc-test-1.exzo.network --fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["where you replace ",(0,a.jsx)(o.code,{children:"<KEYPAIR>"})," with the path to a keypair in your first wallet, and replace ",(0,a.jsx)(o.code,{children:"<RECIPIENT_ACCOUNT_ADDRESS>"})," with the address of your second wallet."]}),"\n",(0,a.jsxs)(o.p,{children:["Confirm the updated balances with ",(0,a.jsx)(o.code,{children:"exzo balance"}),":"]}),"\n",(0,a.jsxs)(o.p,{children:["exzonetwork balance ",(0,a.jsx)(o.code,{children:"<ACCOUNT_ADDRESS> --url  https://rpc-test-1.exzo.network"})]}),"\n",(0,a.jsxs)(o.p,{children:["where ",(0,a.jsx)(o.code,{children:"<ACCOUNT_ADDRESS>"})," is either the public key from your keypair or the recipient's public key."]}),"\n",(0,a.jsx)(o.h3,{children:"Full example of test transfer"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"$ exzo --keygen new --outfile my_exzo_wallet.json   # Creating my first wallet, a file system wallet\r\nGenerating a new keypair\r\nFor added security, enter a passphrase (empty for no passphrase):\r\nWrote new keypair to my_exzo_wallet.json\r\n==========================================================================\r\npubkey: DYw8jCTfwHNRJhhmFcbXvVDTqWMEVFBX6ZKUmG5CNSKK                          # Here is the address of the first wallet\r\n==========================================================================\r\nSave this seed phrase to recover your new keypair:\r\nwidth enhance concert vacant ketchup eternal spy craft spy guard tag punch    # If this was a real wallet, never share these words on the internet like this!\r\n==========================================================================\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzo --keygen new --outfile my_exzo_wallet.json   </span><span style="color: var(--shiki-token-comment)"># Creating my first wallet, a file system wallet</span></span>\n<span><span style="color: var(--shiki-color-text)">Generating a new keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">For added security, enter a passphrase (empty </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> no passphrase):</span></span>\n<span><span style="color: var(--shiki-color-text)">Wrote new keypair to my_exzo_wallet.json</span></span>\n<span><span style="color: var(--shiki-color-text)">==========================================================================</span></span>\n<span><span style="color: var(--shiki-color-text)">pubkey: DYw8jCTfwHNRJhhmFcbXvVDTqWMEVFBX6ZKUmG5CNSKK                          </span><span style="color: var(--shiki-token-comment)"># Here is the address of the first wallet</span></span>\n<span><span style="color: var(--shiki-color-text)">==========================================================================</span></span>\n<span><span style="color: var(--shiki-color-text)">Save this seed phrase to recover your new keypair:</span></span>\n<span><span style="color: var(--shiki-color-text)">width enhance concert vacant ketchup eternal spy craft spy guard tag punch    </span><span style="color: var(--shiki-token-comment)"># If this was a real wallet, never share these words on the internet like this!</span></span>\n<span><span style="color: var(--shiki-color-text)">==========================================================================</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"$ exzo airdrop 10 DYw8jCTfwHNRJhhmFcbXvVDTqWMEVFBX6ZKUmG5CNSKK --url https://rpc-test-1.exzo.network  # Airdropping 10 XZO to my wallet's address/pubkey\r\nRequesting airdrop of 10 XZO from https://rpc-test-1.exzo.network\r\n10 XZO\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzo airdrop 10 DYw8jCTfwHNRJhhmFcbXvVDTqWMEVFBX6ZKUmG5CNSKK --url https://rpc-test-1.exzo.network  </span><span style="color: var(--shiki-token-comment)"># Airdropping 10 XZO to my wallet&#39;s address/pubkey</span></span>\n<span><span style="color: var(--shiki-color-text)">Requesting airdrop of 10 XZO from https://rpc-test-1.exzo.network</span></span>\n<span><span style="color: var(--shiki-color-text)">10 XZO</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"$ exzo balance DYw8jCTfwHNRJhhmFcbXvVDTqWMEVFBX6ZKUmG5CNSKK --url https://rpc-test-1.exzo.network # Check the address's balance\r\n10 XZO\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzo balance DYw8jCTfwHNRJhhmFcbXvVDTqWMEVFBX6ZKUmG5CNSKK --url https://rpc-test-1.exzo.network </span><span style="color: var(--shiki-token-comment)"># Check the address&#39;s balance</span></span>\n<span><span style="color: var(--shiki-color-text)">10 XZO</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"$ exzo-keygen new --no-outfile  # Creating a second wallet, a paper wallet\r\nGenerating a new keypair\r\nFor added security, enter a passphrase (empty for no passphrase):\r\n====================================================================\r\npubkey: 7S3P4HxJpyyigGzodYwHtCxZyUQe9JiBMHyRWXArAaKv                   # Here is the address of the second, paper, wallet.\r\n====================================================================\r\nSave this seed phrase to recover your new keypair:\r\nclump panic cousin hurt coast charge engage fall eager urge win love   # If this was a real wallet, never share these words on the internet like this!\r\n====================================================================\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzo-keygen new --no-outfile  </span><span style="color: var(--shiki-token-comment)"># Creating a second wallet, a paper wallet</span></span>\n<span><span style="color: var(--shiki-color-text)">Generating a new keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">For added security, enter a passphrase (empty </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> no passphrase):</span></span>\n<span><span style="color: var(--shiki-color-text)">====================================================================</span></span>\n<span><span style="color: var(--shiki-color-text)">pubkey: 7S3P4HxJpyyigGzodYwHtCxZyUQe9JiBMHyRWXArAaKv                   </span><span style="color: var(--shiki-token-comment)"># Here is the address of the second, paper, wallet.</span></span>\n<span><span style="color: var(--shiki-color-text)">====================================================================</span></span>\n<span><span style="color: var(--shiki-color-text)">Save this seed phrase to recover your new keypair:</span></span>\n<span><span style="color: var(--shiki-color-text)">clump panic cousin hurt coast charge engage fall eager urge win love   </span><span style="color: var(--shiki-token-comment)"># If this was a real wallet, never share these words on the internet like this!</span></span>\n<span><span style="color: var(--shiki-color-text)">====================================================================</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"$ exzo transfer --from my_exzo_wallet.json 7S3P4HxJpyyigGzodYwHtCxZyUQe9JiBMHyRWXArAaKv 5 --url https://rpc-test-1.exzo.network --fee-payer my_exzonetwork_wallet.json  # Transferring tokens to the public address of the paper wallet\r\n\r\n3gmXvykAd1nCQQ7MjosaHLf69Xyaqyq1qw2eu1mgPyYXd5G4v1rihhg1CiRw35b9fHzcftGKKEu4mbUeXY2pEX2z  # This is the transaction signature\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzo transfer --from my_exzo_wallet.json 7S3P4HxJpyyigGzodYwHtCxZyUQe9JiBMHyRWXArAaKv 5 --url https://rpc-test-1.exzo.network --fee-payer my_exzonetwork_wallet.json  </span><span style="color: var(--shiki-token-comment)"># Transferring tokens to the public address of the paper wallet</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">3gmXvykAd1nCQQ7MjosaHLf69Xyaqyq1qw2eu1mgPyYXd5G4v1rihhg1CiRw35b9fHzcftGKKEu4mbUeXY2pEX2z  </span><span style="color: var(--shiki-token-comment)"># This is the transaction signature</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"$ exzo balance DYw8jCTfwHNRJhhmFcbXvVDTqWMEVFBX6ZKUmG5CNSKK --url https://rpc-test-1.exzo.network\r\n\r\n4.999995 XZO  # The sending account has slightly less than 5 XZO remaining due to the 0.000005 XZO transaction fee payment\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzo balance DYw8jCTfwHNRJhhmFcbXvVDTqWMEVFBX6ZKUmG5CNSKK --url https://rpc-test-1.exzo.network</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">4.999995 XZO  </span><span style="color: var(--shiki-token-comment)"># The sending account has slightly less than 5 XZO remaining due to the 0.000005 XZO transaction fee payment</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"$ exzo balance 7S3P4HxJpyyigGzodYwHtCxZyUQe9JiBMHyRWXArAaKv --url https://rpc-test-1.exzo.network\r\n5 XZO  # The second wallet has now received the 5 XZO transfer from the first wallet\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzo balance 7S3P4HxJpyyigGzodYwHtCxZyUQe9JiBMHyRWXArAaKv --url https://rpc-test-1.exzo.network</span></span>\n<span><span style="color: var(--shiki-color-text)">5 XZO  </span><span style="color: var(--shiki-token-comment)"># The second wallet has now received the 5 XZO transfer from the first wallet</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsx)(o.h2,{id:"receive-tokens",children:"Receive Tokens"}),"\n",(0,a.jsx)(o.p,{children:"To receive tokens, you will need an address for others to send tokens to. In Exzo Network, the wallet address is the public key of a keypair. There are a variety of techniques for generating keypairs. The method you choose will depend on how you choose to store keypairs. Keypairs are stored in wallets. Before receiving tokens, you will need to create a wallet. Once completed, you should have a public key for each keypair you generated. The public key is a long string of base58 characters. Its length varies from 32 to 44 characters."}),"\n",(0,a.jsx)(o.h2,{id:"send-tokens",children:"Send Tokens"}),"\n",(0,a.jsx)(o.p,{children:"If you already hold XZO and want to send tokens to someone, you will need a path to your keypair, their base58-encoded public key, and a number of tokens to transfer. Once you have that collected, you can transfer tokens with the exzo transfer command:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo transfer --from <KEYPAIR> <RECIPIENT_ACCOUNT_ADDRESS> <AMOUNT> --fee-payer <KEYPAIR>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo transfer --from </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RECIPIENT_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["Confirm the updated balances with ",(0,a.jsx)(o.code,{children:"exzonetwork balance"}),":"]}),"\n",(0,a.jsx)(o.p,{children:"Copy"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzo balance <ACCOUNT_ADDRESS>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzo balance </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(t.I,{id:"delegate_stake",title:"Delegate Stake",level:2,isShow:!1}),"\n",(0,a.jsx)(o.p,{children:"After you have received XZO, you might consider putting it to use by delegating stake to a validator. Stake is what we call tokens in a stake account. Exzo Network weights validator votes by the amount of stake delegated to them, which gives those validators more influence in determining then next valid block of transactions in the blockchain. Exzo Network then generates new XZO periodically to reward stakers and validators. You earn more rewards the more stake you delegate."}),"\n",(0,a.jsx)(o.h2,{id:"create-a-stake-account",children:"Create a Stake Account"}),"\n",(0,a.jsx)(o.p,{children:"To delegate stake, you will need to transfer some tokens into a stake account. To create an account, you will need a keypair. Its public key will be used as the stake account address. No need for a password or encryption here; this keypair will be discarded right after creating the stake account."}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork-keygen new --no-passphrase -o stake-account.json\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork-keygen new --no-passphrase -o stake-account.json</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["The output will contain the public key after the text ",(0,a.jsx)(o.code,{children:"pubkey:"}),"."]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"pubkey: GKvqsuNcnwWqPzzuhLmGi4rzzh55FhJtGizkhHaEJqiV\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">pubkey: GKvqsuNcnwWqPzzuhLmGi4rzzh55FhJtGizkhHaEJqiV</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsx)(o.p,{children:"Copy the public key and store it for safekeeping. You will need it any time you want to perform an action on the stake account you create next."}),"\n",(0,a.jsx)(o.p,{children:"Now, create a stake account:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork create-stake-account --from <KEYPAIR> stake-account.json <AMOUNT> \\\r\n--stake-authority <KEYPAIR> --withdraw-authority <KEYPAIR> \\\r\n--fee-payer <KEYPAIR>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork create-stake-account --from </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> stake-account.json </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --withdraw-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"<AMOUNT>"}),' tokens are transferred from the account at the "from" ',(0,a.jsx)(o.code,{children:"<KEYPAIR>"})," to a new stake account at the public key of stake-account.json."]}),"\n",(0,a.jsxs)(o.p,{children:["The stake-account.json file can now be discarded. To authorize additional actions, you will use the ",(0,a.jsx)(o.code,{children:"--stake-authority"})," or ",(0,a.jsx)(o.code,{children:"--withdraw-authority"})," keypair, not stake-account.json."]}),"\n",(0,a.jsx)(o.p,{children:"View the new stake account with the exzonetwork stake-account command:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork stake-account <STAKE_ACCOUNT_ADDRESS>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork stake-account </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"The output will look similar to this:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"Total Stake: 5000 XZO\r\nStake account is undelegated\r\nStake Authority: EXU95vqs93yPeCeAU7mPPu6HbRUmTFPEiGug9oCdvQ5F\r\nWithdraw Authority: EXU95vqs93yPeCeAU7mPPu6HbRUmTFPEiGug9oCdvQ5F\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">Total Stake: 5000 XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">Stake account is undelegated</span></span>\n<span><span style="color: var(--shiki-color-text)">Stake Authority: EXU95vqs93yPeCeAU7mPPu6HbRUmTFPEiGug9oCdvQ5F</span></span>\n<span><span style="color: var(--shiki-color-text)">Withdraw Authority: EXU95vqs93yPeCeAU7mPPu6HbRUmTFPEiGug9oCdvQ5F</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsx)(o.h3,{children:"Set Stake and Withdraw Authorities"}),"\n",(0,a.jsxs)(o.p,{children:["Stake and withdraw authorities can be set when creating an account via the ",(0,a.jsx)(o.code,{children:"--stake-authority"})," and ",(0,a.jsx)(o.code,{children:"--withdraw-authority"})," options, or afterward with the ",(0,a.jsx)(o.code,{children:"exzonetwork stake-authorize"})," command. For example, to set a new stake authority, run:"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork stake-authorize <STAKE_ACCOUNT_ADDRESS> \\\r\n--stake-authority <KEYPAIR> --new-stake-authority <PUBKEY> \\\r\n--fee-payer <KEYPAIR>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork stake-authorize </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --new-stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["This will use the existing stake authority ",(0,a.jsx)(o.code,{children:"<KEYPAIR>"})," to authorize a new stake authority ",(0,a.jsx)(o.code,{children:"<PUBKEY>"})," on the stake account ",(0,a.jsx)(o.code,{children:"<STAKE_ACCOUNT_ADDRESS>"}),"."]}),"\n",(0,a.jsx)(o.h3,{children:"Advanced: Derive Stake Account Addresses"}),"\n",(0,a.jsxs)(o.p,{children:["When you delegate stake, you delegate all tokens in the stake account to a single validator. To delegate to multiple validators, you will need multiple stake accounts. Creating a new keypair for each account and managing those addresses can be cumbersome. Fortunately, you can derive stake addresses using the ",(0,a.jsx)(o.code,{children:"--seed"})," option:"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork create-stake-account --from <KEYPAIR> <STAKE_ACCOUNT_KEYPAIR> --seed <STRING> <AMOUNT> \\\r\n--stake-authority <PUBKEY> --withdraw-authority <PUBKEY> --fee-payer <KEYPAIR>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork create-stake-account --from </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --seed </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STRING</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --withdraw-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"<STRING>"}),' is an arbitrary string up to 32 bytes, but will typically be a number corresponding to which derived account this is. The first account might be "0", then "1", and so on. The public key of ',(0,a.jsx)(o.code,{children:"<STAKE_ACCOUNT_KEYPAIR>"})," acts as the base address. The command derives a new address from the base address and seed string. To see what stake address the command will derive, use ",(0,a.jsx)(o.code,{children:"exzonetwork create-address-with-seed"}),":"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork create-address-with-seed --from <PUBKEY> <SEED_STRING> STAKE\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork create-address-with-seed --from </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SEED_STRING</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> STAKE</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"<PUBKEY>"})," is the public key of the ",(0,a.jsx)(o.code,{children:"<STAKE_ACCOUNT_KEYPAIR>"})," passed to exzonetwork ",(0,a.jsx)(o.code,{children:"create-stake-account"}),"."]}),"\n",(0,a.jsx)(o.h2,{id:"delegate-stake",children:"Delegate Stake"}),"\n",(0,a.jsxs)(o.p,{children:["To delegate your stake to a validator, you will need its vote account address. Find it by querying the cluster for the list of all validators and their vote accounts with the ",(0,a.jsx)(o.code,{children:"exzonetwork validators"})," command:"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork validators\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork validators</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["The first column of each row contains the validator's identity and the second is the vote account address. Choose a validator and use its vote account address in ",(0,a.jsx)(o.code,{children:"exzonetwork delegate-stake"}),":"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork delegate-stake --stake-authority <KEYPAIR> <STAKE_ACCOUNT_ADDRESS> <VOTE_ACCOUNT_ADDRESS> \\\r\n--fee-payer <KEYPAIR>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork delegate-stake --stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["The stake authority ",(0,a.jsx)(o.code,{children:"<KEYPAIR>"})," authorizes the operation on the account with address ",(0,a.jsx)(o.code,{children:"<STAKE_ACCOUNT_ADDRESS>"}),". The stake is delegated to the vote account with address ",(0,a.jsx)(o.code,{children:"<VOTE_ACCOUNT_ADDRESS>"}),"."]}),"\n",(0,a.jsxs)(o.p,{children:["After delegating stake, use ",(0,a.jsx)(o.code,{children:"exzonetwork stake-account"})," to observe the changes to the stake account:"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork stake-account <STAKE_ACCOUNT_ADDRESS>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork stake-account </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:'You will see new fields "Delegated Stake" and "Delegated Vote Account Address" in the output. The output will look similar to this:'}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"Total Stake: 5000 XZO\r\nCredits Observed: 147462\r\nDelegated Stake: 4999.99771712 XZO\r\nDelegated Vote Account Address: CcaHc2L43ZWjwCHART3oZoJvHLAe9hzT2DJNUpBzoTN1\r\nStake activates starting from epoch: 42\r\nStake Authority: EXU95vqs93yPeCeAU7mPPu6HbRUmTFPEiGug9oCdvQ5F\r\nWithdraw Authority: EXU95vqs93yPeCeAU7mPPu6HbRUmTFPEiGug9oCdvQ5F\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">Total Stake: 5000 XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">Credits Observed: 147462</span></span>\n<span><span style="color: var(--shiki-color-text)">Delegated Stake: 4999.99771712 XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">Delegated Vote Account Address: CcaHc2L43ZWjwCHART3oZoJvHLAe9hzT2DJNUpBzoTN1</span></span>\n<span><span style="color: var(--shiki-color-text)">Stake activates starting from epoch: 42</span></span>\n<span><span style="color: var(--shiki-color-text)">Stake Authority: EXU95vqs93yPeCeAU7mPPu6HbRUmTFPEiGug9oCdvQ5F</span></span>\n<span><span style="color: var(--shiki-color-text)">Withdraw Authority: EXU95vqs93yPeCeAU7mPPu6HbRUmTFPEiGug9oCdvQ5F</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsx)(o.h2,{id:"deactivate-stake",children:"Deactivate Stake"}),"\n",(0,a.jsxs)(o.p,{children:["Once delegated, you can undelegate stake with the ",(0,a.jsx)(o.code,{children:"exzonetwork deactivate-stake"})," command:"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork deactivate-stake --stake-authority <KEYPAIR> <STAKE_ACCOUNT_ADDRESS> \\\r\n--fee-payer <KEYPAIR>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork deactivate-stake --stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["The stake authority ",(0,a.jsx)(o.code,{children:"<KEYPAIR>"})," authorizes the operation on the account with address ",(0,a.jsx)(o.code,{children:"<STAKE_ACCOUNT_ADDRESS>"}),"."]}),"\n",(0,a.jsx)(o.p,{children:'Note that stake takes several epochs to "cool down". Attempts to delegate stake in the cool down period will fail.'}),"\n",(0,a.jsx)(o.h2,{id:"withdraw-stake",children:"Withdraw Stake"}),"\n",(0,a.jsxs)(o.p,{children:["Transfer tokens out of a stake account with the ",(0,a.jsx)(o.code,{children:"exzonetwork withdraw-stake"})," command:"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork withdraw-stake --withdraw-authority <KEYPAIR> <STAKE_ACCOUNT_ADDRESS> <RECIPIENT_ADDRESS> <AMOUNT> \\\r\n--fee-payer <KEYPAIR>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork withdraw-stake --withdraw-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RECIPIENT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"<STAKE_ACCOUNT_ADDRESS>"})," is the existing stake account, the stake authority ",(0,a.jsx)(o.code,{children:"<KEYPAIR>"})," is the withdraw authority, and ",(0,a.jsx)(o.code,{children:"<AMOUNT>"})," is the number of tokens to transfer to ",(0,a.jsx)(o.code,{children:"<RECIPIENT_ADDRESS>"}),"."]}),"\n",(0,a.jsx)(o.h2,{id:"split-stake",children:"Split Stake"}),"\n",(0,a.jsxs)(o.p,{children:["You may want to delegate stake to additional validators while your existing stake is not eligible for withdrawal. It might not be eligible because it is currently staked, cooling down, or locked up. To transfer tokens from an existing stake account to a new one, use the ",(0,a.jsx)(o.code,{children:"exzonetwork split-stake"})," command:"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork split-stake --stake-authority <KEYPAIR> <STAKE_ACCOUNT_ADDRESS> <NEW_STAKE_ACCOUNT_KEYPAIR> <AMOUNT> \\\r\n--fee-payer <KEYPAIR>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork split-stake --stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NEW_STAKE_ACCOUNT_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"<STAKE_ACCOUNT_ADDRESS>"})," is the existing stake account, the stake authority ",(0,a.jsx)(o.code,{children:"<KEYPAIR>"})," is the stake authority, ",(0,a.jsx)(o.code,{children:"<NEW_STAKE_ACCOUNT_KEYPAIR>"})," is the keypair for the new account, and ",(0,a.jsx)(o.code,{children:"<AMOUNT>"})," is the number of tokens to transfer to the new account."]}),"\n",(0,a.jsxs)(o.p,{children:["To split a stake account into a derived account address, use the ",(0,a.jsx)(o.code,{children:"--seed"})," option. See Derive Stake Account Addresses for details."]}),"\n",(0,a.jsx)(t.I,{id:"stake_accounts",title:"Manage Stake Accounts",level:2,isShow:!1}),"\n",(0,a.jsxs)(o.p,{children:['If you want to delegate stake to many different validators, you will need to create a separate stake account for each. If you follow the convention of creating the first stake account at seed "0", the second at "1", the third at "2", and so on, then the ',(0,a.jsx)(o.code,{children:"exzonetwork-stake-accounts"})," tool will allow you to operate on all accounts with single invocations. You can use it to sum up the balances of all accounts, move accounts to a new wallet, or set new authorities."]}),"\n",(0,a.jsx)(o.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(o.h3,{children:"Create a stake account"}),"\n",(0,a.jsx)(o.p,{children:"Create and fund a derived stake account at the stake authority public key:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork-stake-accounts new <FUNDING_KEYPAIR> <BASE_KEYPAIR> <AMOUNT> \\\r\n--stake-authority <PUBKEY> --withdraw-authority <PUBKEY> \\\r\n--fee-payer <KEYPAIR>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-accounts new </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FUNDING_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BASE_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --withdraw-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Count accounts"}),"\n",(0,a.jsx)(o.p,{children:"Count the number of derived accounts:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork-stake-accounts count <BASE_PUBKEY>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-accounts count </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BASE_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Get stake account balances"}),"\n",(0,a.jsx)(o.p,{children:"Sum the balance of derived stake accounts:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork-stake-accounts balance <BASE_PUBKEY> --num-accounts <NUMBER>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-accounts balance </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BASE_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --num-accounts </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NUMBER</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Get stake account addresses"}),"\n",(0,a.jsx)(o.p,{children:"List the address of each stake account derived from the given public key:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork-stake-accounts addresses <BASE_PUBKEY> --num-accounts <NUMBER>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-accounts addresses </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BASE_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --num-accounts </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NUMBER</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Set new authorities"}),"\n",(0,a.jsx)(o.p,{children:"Set new authorities on each derived stake account:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork-stake-accounts authorize <BASE_PUBKEY> \\\r\n--stake-authority <KEYPAIR> --withdraw-authority <KEYPAIR> \\\r\n--new-stake-authority <PUBKEY> --new-withdraw-authority <PUBKEY> \\\r\n--num-accounts <NUMBER> --fee-payer <KEYPAIR>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-accounts authorize </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BASE_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --withdraw-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--new-stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --new-withdraw-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--num-accounts </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NUMBER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Relocate stake accounts"}),"\n",(0,a.jsx)(o.p,{children:"Relocate stake accounts:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork-stake-accounts rebase <BASE_PUBKEY> <NEW_BASE_KEYPAIR> \\\r\n--stake-authority <KEYPAIR> --num-accounts <NUMBER> \\\r\n--fee-payer <KEYPAIR>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-accounts rebase </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BASE_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NEW_BASE_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --num-accounts </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NUMBER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"To atomically rebase and authorize each stake account, use the 'move' command:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork-stake-accounts move <BASE_PUBKEY> <NEW_BASE_KEYPAIR> \\\r\n--stake-authority <KEYPAIR> --withdraw-authority <KEYPAIR> \\\r\n--new-stake-authority <PUBKEY> --new-withdraw-authority <PUBKEY> \\\r\n--num-accounts <NUMBER> --fee-payer <KEYPAIR>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-accounts move </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BASE_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NEW_BASE_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --withdraw-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--new-stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --new-withdraw-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--num-accounts </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NUMBER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(t.I,{id:"deploy_program",title:"Deploy a Program",level:2,isShow:!1}),"\n",(0,a.jsx)(o.p,{children:"Developers can deploy on-chain programs (often called smart contracts elsewhere) with the Exzo Network tools."}),"\n",(0,a.jsx)(o.p,{children:"To learn about developing and executing programs on Exzo Network, start with the overview and then dig into the details of on-chain programs."}),"\n",(0,a.jsx)(o.p,{children:"To deploy a program, use the Exzo Network tools to interact with the on-chain loader to:"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Initialize a program account"}),"\n",(0,a.jsx)(o.li,{children:"Upload the program's shared object to the program account's data buffer"}),"\n",(0,a.jsx)(o.li,{children:"Verify the uploaded program"}),"\n",(0,a.jsx)(o.li,{children:"Finalize the program by marking the program account executable."}),"\n",(0,a.jsx)(o.li,{children:"Once deployed, anyone can execute the program by sending transactions that reference it to the cluster."}),"\n"]}),"\n",(0,a.jsx)(o.h2,{id:"usage-2",children:"Usage"}),"\n",(0,a.jsx)(o.h3,{children:"Deploy a program"}),"\n",(0,a.jsx)(o.p,{children:"To deploy a program, you will need the location of the program's shared object (the program binary .so)"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program deploy <PROGRAM_FILEPATH>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program deploy </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"Successful deployment will return the program id of the deployed program, for example:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"Program Id: 3KS2k14CmtnuVv2fvYcvdrNgC94Y11WETBpMUGgXyWZL\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">Program Id: 3KS2k14CmtnuVv2fvYcvdrNgC94Y11WETBpMUGgXyWZL</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsx)(o.p,{children:"Specify the keypair in the deploy command to deploy to a specific program id:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program deploy --program-id <KEYPAIR_FILEPATH> <PROGRAM_FILEPATH>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program deploy --program-id </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR_FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsxs)(o.p,{children:["If the program id is not specified on the command line the tools will first look for a keypair file matching the ",(0,a.jsx)(o.code,{children:"<PROGRAM_FILEPATH>"}),", or internally generate a new keypair."]}),"\n",(0,a.jsxs)(o.p,{children:["A matching program keypair file is in the same directory as the program's shared object, and named ",(0,a.jsx)(o.code,{children:"<PROGRAM_NAME>-keypair.json"}),". Matching program keypairs are generated automatically by the program build tools:"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"./path-to-program/program.so\r\n./path-to-program/program-keypair.json\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">./path-to-program/program.so</span></span>\n<span><span style="color: var(--shiki-color-text)">./path-to-program/program-keypair.json</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Showing a program account"}),"\n",(0,a.jsx)(o.p,{children:"To get information about a deployed program:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program show <ACCOUNT_ADDRESS>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program show </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"An example output looks like:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"Program Id: 3KS2k14CmtnuVv2fvYcvdrNgC94Y11WETBpMUGgXyWZL\r\nOwner: BPFLoaderUpgradeab1e11111111111111111111111\r\nProgramData Address: EHsACWBhgmw8iq5dmUZzTA1esRqcTognhKNHUkPi4q4g\r\nAuthority: FwoGJNUaJN2zfVEex9BB11Dqb3NJKy3e9oY3KTh9XzCU\r\nLast Deployed In Slot: 63890568\r\nData Length: 5216 (0x1460) bytes\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">Program Id: 3KS2k14CmtnuVv2fvYcvdrNgC94Y11WETBpMUGgXyWZL</span></span>\n<span><span style="color: var(--shiki-color-text)">Owner: BPFLoaderUpgradeab1e11111111111111111111111</span></span>\n<span><span style="color: var(--shiki-color-text)">ProgramData Address: EHsACWBhgmw8iq5dmUZzTA1esRqcTognhKNHUkPi4q4g</span></span>\n<span><span style="color: var(--shiki-color-text)">Authority: FwoGJNUaJN2zfVEex9BB11Dqb3NJKy3e9oY3KTh9XzCU</span></span>\n<span><span style="color: var(--shiki-color-text)">Last Deployed In Slot: 63890568</span></span>\n<span><span style="color: var(--shiki-color-text)">Data Length: 5216 (0x1460) bytes</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.code,{children:"Program Id"})," is the address that can be referenced in an instruction's ",(0,a.jsx)(o.code,{children:"program_id"})," field when invoking a program."]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.code,{children:"Owner"}),": The loader this program was deployed with."]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.code,{children:"ProgramData Address"})," is the account associated with the program account that holds the program's data (shared object)."]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.code,{children:"Authority"})," is the program's upgrade authority."]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.code,{children:"Last Deployed"})," In Slot is the slot in which the program was last deployed."]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.code,{children:"Data Length"})," is the size of the space reserved for deployments. The actual space used by the currently deployed program may be less."]}),"\n"]}),"\n",(0,a.jsx)(o.h3,{children:"Redeploy a program"}),"\n",(0,a.jsx)(o.p,{children:"A program can be redeployed to the same address to facilitate rapid development, bug fixes, or upgrades. Matching keypair files are generated once so that redeployments will be to the same program address."}),"\n",(0,a.jsx)(o.p,{children:"The command looks the same as the deployment command:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program deploy <PROGRAM_FILEPATH>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program deploy </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["By default, programs are deployed to accounts that are twice the size of the original deployment. Doing so leaves room for program growth in future redeployments. But, if the initially deployed program is very small (like a simple helloworld program) and then later grows substantially, the redeployment may fail. To avoid this, specify a ",(0,a.jsx)(o.code,{children:"max_len"})," that is at least the size (in bytes) that the program is expected to become (plus some wiggle room)."]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program deploy --max-len 200000 <PROGRAM_FILEPATH>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program deploy --max-len 200000 </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["Note that program accounts are required to be rent-exempt, and the ",(0,a.jsx)(o.code,{children:"max-len"})," is fixed after initial deployment, so any XZO in the program accounts is locked up permanently."]}),"\n",(0,a.jsx)(o.h3,{children:"Resuming a failed deploy"}),"\n",(0,a.jsx)(o.p,{children:"If program deployment fails, there will be a hanging intermediate buffer account that contains a non-zero balance. In order to recoup that balance you may resume a failed deployment by providing the same intermediate buffer to a new call to deploy."}),"\n",(0,a.jsx)(o.p,{children:"Deployment failures will print an error message specifying the seed phrase needed to recover the generated intermediate buffer's keypair:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"==================================================================================\r\nRecover the intermediate accounts ephemeral keypair file with\r\nexzonetwork-keygen recover and the following 12-word seed phrase:\r\n==================================================================================\r\nvalley flat great hockey share token excess clever benefit traffic avocado athlete\r\n==================================================================================\r\nTo resume a deploy, pass the recovered keypair as\r\nthe [PROGRAM_ADDRESS_SIGNER] argument to exzonetwork deploy or\r\nas the [BUFFER_SIGNER] to exzonetwork program deploy or exzonetwork write-buffer.\r\nOr to recover the accounts lamports, pass it as the\r\n[BUFFER_ACCOUNT_ADDRESS] argument to exzonetwork program drain.\r\n==================================================================================\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">==================================================================================</span></span>\n<span><span style="color: var(--shiki-color-text)">Recover the intermediate accounts ephemeral keypair file with</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-keygen recover and the following 12-word seed phrase:</span></span>\n<span><span style="color: var(--shiki-color-text)">==================================================================================</span></span>\n<span><span style="color: var(--shiki-color-text)">valley flat great hockey share token excess clever benefit traffic avocado athlete</span></span>\n<span><span style="color: var(--shiki-color-text)">==================================================================================</span></span>\n<span><span style="color: var(--shiki-color-text)">To resume a deploy, pass the recovered keypair as</span></span>\n<span><span style="color: var(--shiki-color-text)">the [PROGRAM_ADDRESS_SIGNER] argument to exzonetwork deploy or</span></span>\n<span><span style="color: var(--shiki-color-text)">as the [BUFFER_SIGNER] to exzonetwork program deploy or exzonetwork write-buffer.</span></span>\n<span><span style="color: var(--shiki-color-text)">Or to recover the accounts lamports, pass it as the</span></span>\n<span><span style="color: var(--shiki-color-text)">[BUFFER_ACCOUNT_ADDRESS] argument to exzonetwork program drain.</span></span>\n<span><span style="color: var(--shiki-color-text)">==================================================================================</span></span>\n<span></span>'}),title:""}),"\n",(0,a.jsx)(o.p,{children:"To recover the keypair:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork-keygen recover -o <KEYPAIR_PATH>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork-keygen recover -o </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR_PATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"When asked, enter the 12-word seed phrase."}),"\n",(0,a.jsx)(o.p,{children:"Then issue a new deploy command and specify the buffer:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program deploy --buffer <KEYPAIR_PATH> <PROGRAM_FILEPATH>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program deploy --buffer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR_PATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Closing buffer accounts and reclaiming their lamports"}),"\n",(0,a.jsx)(o.p,{children:"If deployment fails there will be a left over buffer account that holds lamports. The buffer account can either be used to resume a deploy or closed. When closed, the full balance of the buffer account will be transferred to the recipient's account."}),"\n",(0,a.jsx)(o.p,{children:"The buffer account's authority must be present to close a buffer account, to list all the open buffer accounts that match the default authority:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program show --buffers\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program show --buffers</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"To specify a different authority:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program show --buffers --buffer-authority <AURTHORITY_ADRESS>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program show --buffers --buffer-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AURTHORITY_ADRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"To close a single account:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program close <BUFFER_ADDRESS>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program close </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BUFFER_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"To close a single account and specify a different authority than the default:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program close <BUFFER_ADDRESS> --buffer-authority <KEYPAIR_FILEPATH>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program close </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BUFFER_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --buffer-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR_FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"To close a single account and specify a different recipient than the default:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program close <BUFFER_ADDRESS> --recipient <RECIPIENT_ADDRESS>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program close </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BUFFER_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --recipient </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RECIPIENT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"To close all the buffer accounts associated with the current authority:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program close --buffers\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program close --buffers</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"To show all buffer accounts regardless of the authority"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program show --buffers --all\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program show --buffers --all</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Set a program's upgrade authority"}),"\n",(0,a.jsx)(o.p,{children:"The program's upgrade authority must to be present to deploy a program. If no authority is specified during program deployment, the default keypair is used as the authority. This is why redeploying a program in the steps above didn't require an authority to be explicitly specified."}),"\n",(0,a.jsx)(o.p,{children:"The authority can be specified during deployment:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program deploy --upgrade-authority <UPGRADE_AUTHORITY_SIGNER> <PROGRAM_FILEPATH>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program deploy --upgrade-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">UPGRADE_AUTHORITY_SIGNER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"Or after deployment and using the default keypair as the current authority:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program set-upgrade-authority <PROGRAM_ADDRESS> --new-upgrade-authority <NEW_UPGRADE_AUTHORITY>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program set-upgrade-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --new-upgrade-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NEW_UPGRADE_AUTHORITY</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"Or after deployment and specifying the current authority:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program set-upgrade-authority <PROGRAM_ADDRESS> --upgrade-authority <UPGRADE_AUTHORITY_SIGNER> --new-upgrade-authority <NEW_UPGRADE_AUTHORITY>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program set-upgrade-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --upgrade-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">UPGRADE_AUTHORITY_SIGNER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --new-upgrade-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NEW_UPGRADE_AUTHORITY</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Immutable programs"}),"\n",(0,a.jsxs)(o.p,{children:["A program can be marked immutable, which prevents all further redeployments, by specifying the ",(0,a.jsx)(o.code,{children:"--final"})," flag during deployment:"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program deploy <PROGRAM_FILEPATH> --final\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program deploy </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --final</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"Or anytime after:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program set-upgrade-authority <PROGRAM_ADDRESS> --final\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program set-upgrade-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --final</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"exzonetwork program deploy ..."})," utilizes Exno Network’s upgradeable loader, but there is another way to deploy immutable programs using the original on-chain loader:"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork deploy <PROGRAM_FILEPATH>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork deploy </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["Programs deployed with ",(0,a.jsx)(o.code,{children:"exzonetwork deploy ..."})," are not redeployable and are not compatible with the ",(0,a.jsx)(o.code,{children:"exzonetwork program ..."})," commands."]}),"\n",(0,a.jsx)(o.h3,{children:"Dumping a program to a file"}),"\n",(0,a.jsx)(o.p,{children:"The deployed program may be dumped back to a local file:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program dump <ACCOUNT_ADDRESS> <OUTPUT_FILEPATH>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program dump </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">OUTPUT_FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["The dumped file will be in the same as what was deployed, so in the case of a shared object, the dumped file will be a fully functional shared object. Note that the ",(0,a.jsx)(o.code,{children:"dump"})," command dumps the entire data space, which means the output file will have trailing zeros after the shared object's data up to ",(0,a.jsx)(o.code,{children:"max_len"}),". Sometimes it is useful to dump and compare a program to ensure it matches a known program binary. The original program file can be zero-extended, hashed, and compared to the hash of the dumped file."]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"$ exzonetwork dump <ACCOUNT_ADDRESS> dump.so\r\n$ cp original.so extended.so\r\n$ truncate -r dump.so extended.so\r\n$ sha256sum extended.so dump.so\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzonetwork dump </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> dump.so</span></span>\n<span><span style="color: var(--shiki-color-text)">$ cp original.so extended.so</span></span>\n<span><span style="color: var(--shiki-color-text)">$ truncate -r dump.so extended.so</span></span>\n<span><span style="color: var(--shiki-color-text)">$ sha256sum extended.so dump.so</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Using an intermediary Buffer account"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"$ exzonetwork dump <ACCOUNT_ADDRESS> dump.so\r\n$ cp original.so extended.so\r\n$ truncate -r dump.so extended.so\r\n$ sha256sum extended.so dump.so\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzonetwork dump </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> dump.so</span></span>\n<span><span style="color: var(--shiki-color-text)">$ cp original.so extended.so</span></span>\n<span><span style="color: var(--shiki-color-text)">$ truncate -r dump.so extended.so</span></span>\n<span><span style="color: var(--shiki-color-text)">$ sha256sum extended.so dump.so</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"Instead of deploying directly to the program account, the program can be written to an intermediary buffer account. Intermediary accounts can useful for things like multi-entity governed programs where the governing members fist verify the intermediary buffer contents and then vote to allow an upgrade using it."}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program write-buffer <PROGRAM_FILEPATH>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program write-buffer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"Buffer accounts support authorities like program accounts:"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program set-buffer-authority <BUFFER_ADDRESS> --new-upgrade-authority <NEW_UPGRADE_AUTHORITY>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program set-buffer-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BUFFER_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --new-upgrade-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NEW_UPGRADE_AUTHORITY</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsxs)(o.p,{children:["One exception is that buffer accounts cannot be marked immutable like program accounts can, so they don't support ",(0,a.jsx)(o.code,{children:"--final"}),"."]}),"\n",(0,a.jsxs)(o.p,{children:["The buffer account, once entirely written, can be passed to ",(0,a.jsx)(o.code,{children:"deploy"})," to deploy the program:"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork program deploy --program-id <PROGRAM_ADDRESS> --buffer <BUFFER_ADDRESS>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork program deploy --program-id </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --buffer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BUFFER_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.p,{children:"Note, the buffer's authority must match the program's upgrade authority."}),"\n",(0,a.jsxs)(o.p,{children:["Buffers also support ",(0,a.jsx)(o.code,{children:"show"})," and ",(0,a.jsx)(o.code,{children:"dump"})," just like programs do."]}),"\n",(0,a.jsx)(t.I,{id:"transaction_signing",title:"Offline Transaction Signing",level:2,isShow:!1}),"\n",(0,a.jsx)(o.p,{children:"Some security models require keeping signing keys, and thus the signing process, separated from transaction creation and network broadcast. Examples include:"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Collecting signatures from geographically disparate signers in a multi-signature scheme"}),"\n",(0,a.jsx)(o.li,{children:"Signing transactions using an airgapped signing device"}),"\n"]}),"\n",(0,a.jsx)(o.p,{children:"This document describes using Exzo Network CLI to separately sign and submit a transaction."}),"\n",(0,a.jsx)(o.h2,{id:"commands-supporting-offline-signing",children:"Commands Supporting Offline Signing"}),"\n",(0,a.jsx)(o.p,{children:"At present, the following commands support offline signing:"}),"\n",(0,a.jsx)(r.m,{id:"elements",title:"",level:2,elements:i,isHeading:!1}),"\n",(0,a.jsx)(o.h2,{id:"signing-transactions-offline",children:"Signing Transactions Offline"}),"\n",(0,a.jsx)(o.p,{children:"To sign a transaction offline, pass the following arguments on the command line"}),"\n",(0,a.jsxs)(o.ol,{children:["\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"--sign-only"}),", prevents the client from submitting the signed transaction to the network. Instead, the pubkey/signature pairs are printed to stdout."]}),"\n"]}),"\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:" --blockhash BASE58_HASH"}),", allows the caller to specify the value used to fill the transaction's ",(0,a.jsx)(o.code,{children:"recent_blockhash"})," field. This serves a number of purposes, namely: Eliminates the need to connect to the network and query a recent blockhash via RPC Enables the signers to coordinate the blockhash in a multiple-signature scheme."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(o.h3,{children:"Example: Offline Signing a Payment"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork@offline$ exzonetwork transfer --sign-only --blockhash 5Tx8F3jgSHx21CbtjwmdaKPLM5tWmreWAnPrbqHomSJF \\\r\n recipient-keypair.json 1\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork@offline$ exzonetwork transfer --sign-only --blockhash 5Tx8F3jgSHx21CbtjwmdaKPLM5tWmreWAnPrbqHomSJF \\</span></span>\n<span><span style="color: var(--shiki-color-text)"> recipient-keypair.json 1</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.pre,{language:"json",code:'Blockhash: 5Tx8F3jgSHx21CbtjwmdaKPLM5tWmreWAnPrbqHomSJF\r\nSigners (Pubkey=Signature):\r\nFhtzLVsmcV7S5XqGD79ErgoseCLhZYmEZnz9kQg1Rp7j=4vC38p4bz7XyiXrk6HtaooUqwxTWKocf45cstASGtmrD398biNJnmTcUCVEojE7wVQvgdYbjHJqRFZPpzfCQpmUN\r\n\r\n{"blockhash":"5Tx8F3jgSHx21CbtjwmdaKPLM5tWmreWAnPrbqHomSJF","signers":["FhtzLVsmcV7S5XqGD79ErgoseCLhZYmEZnz9kQg1Rp7j=4vC38p4bz7XyiXrk6HtaooUqwxTWKocf45cstASGtmrD398biNJnmTcUCVEojE7wVQvgdYbjHJqRFZPpzfCQpmUN"]}\n',children:(0,a.jsx)(o.code,{className:"language-json",children:'<span><span style="color: var(--shiki-color-text)">Blockhash: </span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-color-text)">Tx</span><span style="color: var(--shiki-token-constant)">8</span><span style="color: var(--shiki-color-text)">F</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">jgSHx</span><span style="color: var(--shiki-token-constant)">21</span><span style="color: var(--shiki-color-text)">CbtjwmdaKPLM</span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-color-text)">tWmreWAnPrbqHomSJF</span></span>\n<span><span style="color: var(--shiki-color-text)">Signers (Pubkey=Signature):</span></span>\n<span><span style="color: var(--shiki-color-text)">FhtzLVsmcV</span><span style="color: var(--shiki-token-constant)">7</span><span style="color: var(--shiki-color-text)">S</span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-color-text)">XqGD</span><span style="color: var(--shiki-token-constant)">79</span><span style="color: var(--shiki-color-text)">ErgoseCLhZYmEZnz</span><span style="color: var(--shiki-token-constant)">9</span><span style="color: var(--shiki-color-text)">kQg</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">Rp</span><span style="color: var(--shiki-token-constant)">7</span><span style="color: var(--shiki-color-text)">j=</span><span style="color: var(--shiki-token-constant)">4</span><span style="color: var(--shiki-color-text)">vC</span><span style="color: var(--shiki-token-constant)">38</span><span style="color: var(--shiki-color-text)">p</span><span style="color: var(--shiki-token-constant)">4</span><span style="color: var(--shiki-color-text)">bz</span><span style="color: var(--shiki-token-constant)">7</span><span style="color: var(--shiki-color-text)">XyiXrk</span><span style="color: var(--shiki-token-constant)">6</span><span style="color: var(--shiki-color-text)">HtaooUqwxTWKocf</span><span style="color: var(--shiki-token-constant)">45</span><span style="color: var(--shiki-color-text)">cstASGtmrD</span><span style="color: var(--shiki-token-constant)">398</span><span style="color: var(--shiki-color-text)">biNJnmTcUCVEojE</span><span style="color: var(--shiki-token-constant)">7</span><span style="color: var(--shiki-color-text)">wVQvgdYbjHJqRFZPpzfCQpmUN</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">{</span><span style="color: var(--shiki-token-keyword)">&quot;blockhash&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-token-string-expression)">&quot;5Tx8F3jgSHx21CbtjwmdaKPLM5tWmreWAnPrbqHomSJF&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-keyword)">&quot;signers&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)">[</span><span style="color: var(--shiki-token-string-expression)">&quot;FhtzLVsmcV7S5XqGD79ErgoseCLhZYmEZnz9kQg1Rp7j=4vC38p4bz7XyiXrk6HtaooUqwxTWKocf45cstASGtmrD398biNJnmTcUCVEojE7wVQvgdYbjHJqRFZPpzfCQpmUN&quot;</span><span style="color: var(--shiki-color-text)">]}</span></span>\n<span></span>'}),title:"Output"}),"\n",(0,a.jsx)(o.h2,{id:"submitting-offline-signed-transactions-to-the-network",children:"Submitting Offline Signed Transactions to the Network"}),"\n",(0,a.jsx)(o.p,{children:"To submit a transaction that has been signed offline to the network, pass the following arguments on the command line"}),"\n",(0,a.jsxs)(o.ol,{children:["\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"--blockhash BASE58_HASH"}),", must be the same blockhash as was used to sign"]}),"\n"]}),"\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"--signer BASE58_PUBKEY=BASE58_SIGNATURE"}),", one for each offline signer. This includes the pubkey/signature pairs directly in the transaction rather than signing it with any local keypair(s)"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(o.h3,{children:"Example: Submitting an Offline Signed Payment"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork@online$ exzonetwork transfer --blockhash 5Tx8F3jgSHx21CbtjwmdaKPLM5tWmreWAnPrbqHomSJF \\\r\n--signer FhtzLVsmcV7S5XqGD79ErgoseCLhZYmEZnz9kQg1Rp7j=4vC38p4bz7XyiXrk6HtaooUqwxTWKocf45cstASGtmrD398biNJnmTcUCVEojE7wVQvgdYbjHJqRFZPpzfCQpmUN\r\nrecipient-keypair.json 1\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork@online$ exzonetwork transfer --blockhash 5Tx8F3jgSHx21CbtjwmdaKPLM5tWmreWAnPrbqHomSJF \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--signer FhtzLVsmcV7S5XqGD79ErgoseCLhZYmEZnz9kQg1Rp7j=4vC38p4bz7XyiXrk6HtaooUqwxTWKocf45cstASGtmrD398biNJnmTcUCVEojE7wVQvgdYbjHJqRFZPpzfCQpmUN</span></span>\n<span><span style="color: var(--shiki-color-text)">recipient-keypair.json 1</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"4vC38p4bz7XyiXrk6HtaooUqwxTWKocf45cstASGtmrD398biNJnmTcUCVEojE7wVQvgdYbjHJqRFZPpzfCQpmUN\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">4vC38p4bz7XyiXrk6HtaooUqwxTWKocf45cstASGtmrD398biNJnmTcUCVEojE7wVQvgdYbjHJqRFZPpzfCQpmUN</span></span>\n<span></span>'}),title:"Output"}),"\n",(0,a.jsx)(o.h2,{id:"offline-signing-over-multiple-sessions",children:"Offline Signing Over Multiple Sessions"}),"\n",(0,a.jsx)(o.p,{children:"Offline signing can also take place over multiple sessions. In this scenario, pass the absent signer's public key for each role. All pubkeys that were specified, but no signature was generated for will be listed as absent in the offline signing output"}),"\n",(0,a.jsx)(o.h3,{children:"Example: Transfer with Two Offline Signing Sessions"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork@offline1 exzonetwork transfer Fdri24WUGtrCXZ55nXiewAj6RM18hRHPGAjZk3o6vBut 10 \\\r\n--blockhash 7ALDjLv56a8f6sH6upAZALQKkXyjAwwENH9GomyM8Dbc \\\r\n--sign-only \\\r\n--keypair fee_payer.json \\\r\n--from 674RgFMgdqdRoVtMqSBg7mHFbrrNm1h1r721H1ZMquHL\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork@offline1 exzonetwork transfer Fdri24WUGtrCXZ55nXiewAj6RM18hRHPGAjZk3o6vBut 10 \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--blockhash 7ALDjLv56a8f6sH6upAZALQKkXyjAwwENH9GomyM8Dbc \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--sign-only \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--keypair fee_payer.json \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--from 674RgFMgdqdRoVtMqSBg7mHFbrrNm1h1r721H1ZMquHL</span></span>\n<span></span>'}),title:"Command (Offline Session #1)"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"Blockhash: 7ALDjLv56a8f6sH6upAZALQKkXyjAwwENH9GomyM8Dbc\r\nSigners (Pubkey=Signature):\r\n  3bo5YiRagwmRikuH6H1d2gkKef5nFZXE3gJeoHxJbPjy=ohGKvpRC46jAduwU9NW8tP91JkCT5r8Mo67Ysnid4zc76tiiV1Ho6jv3BKFSbBcr2NcPPCarmfTLSkTHsJCtdYi\r\nAbsent Signers (Pubkey):\r\n  674RgFMgdqdRoVtMqSBg7mHFbrrNm1h1r721H1ZMquHL\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">Blockhash: 7ALDjLv56a8f6sH6upAZALQKkXyjAwwENH9GomyM8Dbc</span></span>\n<span><span style="color: var(--shiki-color-text)">Signers (Pubkey=Signature):</span></span>\n<span><span style="color: var(--shiki-color-text)">  3bo5YiRagwmRikuH6H1d2gkKef5nFZXE3gJeoHxJbPjy=ohGKvpRC46jAduwU9NW8tP91JkCT5r8Mo67Ysnid4zc76tiiV1Ho6jv3BKFSbBcr2NcPPCarmfTLSkTHsJCtdYi</span></span>\n<span><span style="color: var(--shiki-color-text)">Absent Signers (Pubkey):</span></span>\n<span><span style="color: var(--shiki-color-text)">  674RgFMgdqdRoVtMqSBg7mHFbrrNm1h1r721H1ZMquHL</span></span>\n<span></span>'}),title:"Output (Offline Session #1)"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork@offline2 exzonetwork transfer Fdri24WUGtrCXZ55nXiewAj6RM18hRHPGAjZk3o6vBut 10 \\\r\n--blockhash 7ALDjLv56a8f6sH6upAZALQKkXyjAwwENH9GomyM8Dbc \\\r\n--sign-only \\\r\n--keypair from.json \\\r\n--fee-payer 3bo5YiRagwmRikuH6H1d2gkKef5nFZXE3gJeoHxJbPjy\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork@offline2 exzonetwork transfer Fdri24WUGtrCXZ55nXiewAj6RM18hRHPGAjZk3o6vBut 10 \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--blockhash 7ALDjLv56a8f6sH6upAZALQKkXyjAwwENH9GomyM8Dbc \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--sign-only \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--keypair from.json \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--fee-payer 3bo5YiRagwmRikuH6H1d2gkKef5nFZXE3gJeoHxJbPjy</span></span>\n<span></span>'}),title:"Command (Offline Session #2)"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"Blockhash: 7ALDjLv56a8f6sH6upAZALQKkXyjAwwENH9GomyM8Dbc\r\nSigners (Pubkey=Signature):\r\n  674RgFMgdqdRoVtMqSBg7mHFbrrNm1h1r721H1ZMquHL=3vJtnba4dKQmEAieAekC1rJnPUndBcpvqRPRMoPWqhLEMCty2SdUxt2yvC1wQW6wVUa5putZMt6kdwCaTv8gk7sQ\r\nAbsent Signers (Pubkey):\r\n  3bo5YiRagwmRikuH6H1d2gkKef5nFZXE3gJeoHxJbPjy\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">Blockhash: 7ALDjLv56a8f6sH6upAZALQKkXyjAwwENH9GomyM8Dbc</span></span>\n<span><span style="color: var(--shiki-color-text)">Signers (Pubkey=Signature):</span></span>\n<span><span style="color: var(--shiki-color-text)">  674RgFMgdqdRoVtMqSBg7mHFbrrNm1h1r721H1ZMquHL=3vJtnba4dKQmEAieAekC1rJnPUndBcpvqRPRMoPWqhLEMCty2SdUxt2yvC1wQW6wVUa5putZMt6kdwCaTv8gk7sQ</span></span>\n<span><span style="color: var(--shiki-color-text)">Absent Signers (Pubkey):</span></span>\n<span><span style="color: var(--shiki-color-text)">  3bo5YiRagwmRikuH6H1d2gkKef5nFZXE3gJeoHxJbPjy</span></span>\n<span></span>'}),title:"Output (Offline Session #2)"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork@online exzonetwork transfer Fdri24WUGtrCXZ55nXiewAj6RM18hRHPGAjZk3o6vBut 10 \\\r\n--blockhash 7ALDjLv56a8f6sH6upAZALQKkXyjAwwENH9GomyM8Dbc \\\r\n--from 674RgFMgdqdRoVtMqSBg7mHFbrrNm1h1r721H1ZMquHL \\\r\n--signer 674RgFMgdqdRoVtMqSBg7mHFbrrNm1h1r721H1ZMquHL=3vJtnba4dKQmEAieAekC1rJnPUndBcpvqRPRMoPWqhLEMCty2SdUxt2yvC1wQW6wVUa5putZMt6kdwCaTv8gk7sQ \\\r\n--fee-payer 3bo5YiRagwmRikuH6H1d2gkKef5nFZXE3gJeoHxJbPjy \\\r\n--signer 3bo5YiRagwmRikuH6H1d2gkKef5nFZXE3gJeoHxJbPjy=ohGKvpRC46jAduwU9NW8tP91JkCT5r8Mo67Ysnid4zc76tiiV1Ho6jv3BKFSbBcr2NcPPCarmfTLSkTHsJCtdYi\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork@online exzonetwork transfer Fdri24WUGtrCXZ55nXiewAj6RM18hRHPGAjZk3o6vBut 10 \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--blockhash 7ALDjLv56a8f6sH6upAZALQKkXyjAwwENH9GomyM8Dbc \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--from 674RgFMgdqdRoVtMqSBg7mHFbrrNm1h1r721H1ZMquHL \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--signer 674RgFMgdqdRoVtMqSBg7mHFbrrNm1h1r721H1ZMquHL=3vJtnba4dKQmEAieAekC1rJnPUndBcpvqRPRMoPWqhLEMCty2SdUxt2yvC1wQW6wVUa5putZMt6kdwCaTv8gk7sQ \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--fee-payer 3bo5YiRagwmRikuH6H1d2gkKef5nFZXE3gJeoHxJbPjy \\</span></span>\n<span><span style="color: var(--shiki-color-text)">--signer 3bo5YiRagwmRikuH6H1d2gkKef5nFZXE3gJeoHxJbPjy=ohGKvpRC46jAduwU9NW8tP91JkCT5r8Mo67Ysnid4zc76tiiV1Ho6jv3BKFSbBcr2NcPPCarmfTLSkTHsJCtdYi</span></span>\n<span></span>'}),title:"Online Submission"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"ohGKvpRC46jAduwU9NW8tP91JkCT5r8Mo67Ysnid4zc76tiiV1Ho6jv3BKFSbBcr2NcPPCarmfTLSkTHsJCtdYi\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">ohGKvpRC46jAduwU9NW8tP91JkCT5r8Mo67Ysnid4zc76tiiV1Ho6jv3BKFSbBcr2NcPPCarmfTLSkTHsJCtdYi</span></span>\n<span></span>'}),title:"Online Submission"}),"\n",(0,a.jsx)(o.h2,{id:"buying-more-time-to-sign",children:"Buying More Time to Sign"}),"\n",(0,a.jsxs)(o.p,{children:["Typically a Exzo Network transaction must be signed and accepted by the network within a number of slots from the blockhash in its ",(0,a.jsx)(o.code,{children:"recent_blockhash"})," field (~2min at the time of this writing). If your signing procedure takes longer than this, a Durable Transaction Nonce can give you the extra time you need."]}),"\n",(0,a.jsx)(t.I,{id:"transaction_nonces",title:"Durable Transaction Nonces",level:2,isShow:!1}),"\n",(0,a.jsxs)(o.p,{children:["Durable transaction nonces are a mechanism for getting around the typical short lifetime of a transaction's ",(0,a.jsx)(o.code,{children:"recent_blockhash"}),"."]}),"\n",(0,a.jsx)(o.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,a.jsx)(o.p,{children:"Full usage details for durable nonce CLI commands can be found in the CLI reference."}),"\n",(0,a.jsx)(o.h3,{children:"Nonce Authority"}),"\n",(0,a.jsxs)(o.p,{children:["Authority over a nonce account can optionally be assigned to another account. In doing so the new authority inherits full control over the nonce account from the previous authority, including the account creator. This feature enables the creation of more complex account ownership arrangements and derived account addresses not associated with a keypair. The ",(0,a.jsx)(o.code,{children:"--nonce-authority <AUTHORITY_KEYPAIR>"})," argument is used to specify this account and is supported by the following commands"]}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"create-nonce-account"}),"\n",(0,a.jsx)(o.li,{children:"new-nonce"}),"\n",(0,a.jsx)(o.li,{children:"withdraw-from-nonce-account"}),"\n",(0,a.jsx)(o.li,{children:"authorize-nonce-account"}),"\n"]}),"\n",(0,a.jsx)(o.h3,{children:"Nonce Account Creation"}),"\n",(0,a.jsx)(o.p,{children:"The durable transaction nonce feature uses an account to store the next nonce value. Durable nonce accounts must be rent-exempt, so need to carry the minimum balance to achieve this."}),"\n",(0,a.jsx)(o.p,{children:"A nonce account is created by first generating a new keypair, then create the account on chain"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork-keygen new -o nonce-keypair.json\r\nexzonetwork create-nonce-account nonce-keypair.json 1\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork-keygen new -o nonce-keypair.json</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork create-nonce-account nonce-keypair.json 1</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"2SymGjGV4ksPdpbaqWFiDoBz8okvtiik4KE9cnMQgRHrRLySSdZ6jrEcpPifW4xUpp4z66XM9d9wM48sA7peG2XL\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">2SymGjGV4ksPdpbaqWFiDoBz8okvtiik4KE9cnMQgRHrRLySSdZ6jrEcpPifW4xUpp4z66XM9d9wM48sA7peG2XL</span></span>\n<span></span>'}),title:"Output"}),"\n",(0,a.jsx)(o.p,{children:"To keep the keypair entirely offline, use the Paper Wallet keypair generation instructions instead."}),"\n",(0,a.jsx)(o.p,{children:"Full usage documentation"}),"\n",(0,a.jsx)(o.h3,{children:"Querying the Stored Nonce Value"}),"\n",(0,a.jsxs)(o.p,{children:["Creating a durable nonce transaction requires passing the stored nonce value as the value to the ",(0,a.jsx)(o.code,{children:"--blockhash"})," argument upon signing and submission. Obtain the presently stored nonce value with"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork nonce nonce-keypair.json\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork nonce nonce-keypair.json</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"8GRipryfxcsxN8mAGjy8zbFo9ezaUsh47TsPzmZbuytU\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">8GRipryfxcsxN8mAGjy8zbFo9ezaUsh47TsPzmZbuytU</span></span>\n<span></span>'}),title:"Output"}),"\n",(0,a.jsx)(o.h3,{children:"Advancing the Stored Nonce Value"}),"\n",(0,a.jsx)(o.p,{children:"While not typically needed outside a more useful transaction, the stored nonce value can be advanced by"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork new-nonce nonce-keypair.json\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork new-nonce nonce-keypair.json</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"44jYe1yPKrjuYDmoFTdgPjg8LFpYyh1PFKJqm5SC1PiSyAL8iw1bhadcAX1SL7KDmREEkmHpYvreKoNv6fZgfvUK\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">44jYe1yPKrjuYDmoFTdgPjg8LFpYyh1PFKJqm5SC1PiSyAL8iw1bhadcAX1SL7KDmREEkmHpYvreKoNv6fZgfvUK</span></span>\n<span></span>'}),title:"Output"}),"\n",(0,a.jsx)(o.p,{children:"Full usage documentation"}),"\n",(0,a.jsx)(o.h3,{children:"Display Nonce Account"}),"\n",(0,a.jsx)(o.p,{children:"Inspect a nonce account in a more human friendly format with"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork nonce-account nonce-keypair.json\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork nonce-account nonce-keypair.json</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"balance: 0.5 XZO\r\nminimum balance required: 0.00136416 XZO\r\nnonce: DZar6t2EaCFQTbUP4DHKwZ1wT8gCPW2aRfkVWhydkBvS\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">balance: 0.5 XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">minimum balance required: 0.00136416 XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">nonce: DZar6t2EaCFQTbUP4DHKwZ1wT8gCPW2aRfkVWhydkBvS</span></span>\n<span></span>'}),title:"Output"}),"\n",(0,a.jsx)(o.p,{children:"Full usage documentation"}),"\n",(0,a.jsx)(o.h3,{children:"Withdraw Funds from a Nonce Account"}),"\n",(0,a.jsx)(o.p,{children:"Withdraw funds from a nonce account with"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork withdraw-from-nonce-account nonce-keypair.json ~/.config/exzonetwork/id.json 0.5\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork withdraw-from-nonce-account nonce-keypair.json </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/id.json 0.5</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"3foNy1SBqwXSsfSfTdmYKDuhnVheRnKXpoPySiUDBVeDEs6iMVokgqm7AqfTjbk7QBE8mqomvMUMNQhtdMvFLide\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">3foNy1SBqwXSsfSfTdmYKDuhnVheRnKXpoPySiUDBVeDEs6iMVokgqm7AqfTjbk7QBE8mqomvMUMNQhtdMvFLide</span></span>\n<span></span>'}),title:"Output"}),"\n",(0,a.jsx)(o.p,{children:"Close a nonce account by withdrawing the full balance"}),"\n",(0,a.jsx)(o.p,{children:"Full usage documentation"}),"\n",(0,a.jsx)(o.h3,{children:"Assign a New Authority to a Nonce Account"}),"\n",(0,a.jsx)(o.p,{children:"Reassign the authority of a nonce account after creation with"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork authorize-nonce-account nonce-keypair.json nonce-authority.json\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork authorize-nonce-account nonce-keypair.json nonce-authority.json</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"3F9cg4zN9wHxLGx4c3cUKmqpej4oa67QbALmChsJbfxTgTffRiL3iUehVhR9wQmWgPua66jPuAYeL1K2pYYjbNoT\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">3F9cg4zN9wHxLGx4c3cUKmqpej4oa67QbALmChsJbfxTgTffRiL3iUehVhR9wQmWgPua66jPuAYeL1K2pYYjbNoT</span></span>\n<span></span>'}),title:"Output"}),"\n",(0,a.jsx)(o.p,{children:"Full usage documentation"}),"\n",(0,a.jsx)(o.h2,{id:"other-commands-supporting-durable-nonces",children:"Other Commands Supporting Durable Nonces"}),"\n",(0,a.jsx)(o.p,{children:"To make use of durable nonces with other CLI subcommands, two arguments must be supported."}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.code,{children:"--nonce"}),", specifies the account storing the nonce value"]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.code,{children:"--nonce-authority"}),", specifies an optional nonce authority"]}),"\n"]}),"\n",(0,a.jsx)(o.p,{children:"The following subcommands have received this treatment so far"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:(0,a.jsx)(o.code,{children:"pay"})}),"\n",(0,a.jsx)(o.li,{children:(0,a.jsx)(o.code,{children:"delegate-stake"})}),"\n",(0,a.jsx)(o.li,{children:(0,a.jsx)(o.code,{children:"deactivate-stake"})}),"\n"]}),"\n",(0,a.jsx)(o.h3,{children:"Example Pay Using Durable Nonce"}),"\n",(0,a.jsx)(o.p,{children:"Here we demonstrate Alice paying Bob 1 XZO using a durable nonce. The procedure is the same for all subcommands supporting durable nonces"}),"\n",(0,a.jsx)(o.h3,{children:"Create accounts"}),"\n",(0,a.jsx)(o.p,{children:"First we need some accounts for Alice, Alice's nonce and Bob"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"$ exzonetwork-keygen new -o alice.json\r\n\r\n$ exzonetwork-keygen new -o nonce.json\r\n\r\n$ exzonetwork-keygen new -o bob.json\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzonetwork-keygen new -o alice.json</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">$ exzonetwork-keygen new -o nonce.json</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">$ exzonetwork-keygen new -o bob.json</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Fund Alice's account"}),"\n",(0,a.jsx)(o.p,{children:"Alice will need some funds to create a nonce account and send to Bob. Airdrop her some XZO"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"$ exzonetwork airdrop -k alice.json 1\r\n1 XZO\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzonetwork airdrop -k alice.json 1</span></span>\n<span><span style="color: var(--shiki-color-text)">1 XZO</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Create Alice's nonce account"}),"\n",(0,a.jsx)(o.p,{children:"Now Alice needs a nonce account. Create one"}),"\n",(0,a.jsxs)(o.p,{children:["Here, no separate nonce authority is employed, so ",(0,a.jsx)(o.code,{children:"alice.json"})," has full authority over the nonce account"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"$ exzonetwork create-nonce-account -k alice.json nonce.json 0.1\r\n3KPZr96BTsL3hqera9up82KAU462Gz31xjqJ6eHUAjF935Yf8i1kmfEbo6SVbNaACKE5z6gySrNjVRvmS8DcPuwV\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzonetwork create-nonce-account -k alice.json nonce.json 0.1</span></span>\n<span><span style="color: var(--shiki-color-text)">3KPZr96BTsL3hqera9up82KAU462Gz31xjqJ6eHUAjF935Yf8i1kmfEbo6SVbNaACKE5z6gySrNjVRvmS8DcPuwV</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"A failed first attempt to pay Bob"}),"\n",(0,a.jsx)(o.p,{children:"Alice attempts to pay Bob, but takes too long to sign. The specified blockhash expires and the transaction fails"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:'$ exzonetwork pay -k alice.json --blockhash expiredDTaxfagttWjQweib42b6ZHADSx94Tw8gHx3W7 bob.json 0.01\r\n[2020-01-02T18:48:28.462911000Z ERROR exzonetwork_cli::cli] Io(Custom { kind: Other, error: "Transaction \\"33gQQaoPc9jWePMvDAeyJpcnSPiGUAdtVg8zREWv4GiKjkcGNufgpcbFyRKRrA25NkgjZySEeKue5rawyeH5TzsV\\" failed: None" })\r\nError: Io(Custom { kind: Other, error: "Transaction \\"33gQQaoPc9jWePMvDAeyJpcnSPiGUAdtVg8zREWv4GiKjkcGNufgpcbFyRKRrA25NkgjZySEeKue5rawyeH5TzsV\\" failed: None" })\n',children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzonetwork pay -k alice.json --blockhash expiredDTaxfagttWjQweib42b6ZHADSx94Tw8gHx3W7 bob.json 0.01</span></span>\n<span><span style="color: var(--shiki-color-text)">[2020-01-02T18:48:28.462911000Z ERROR exzonetwork_cli::cli] Io(Custom { kind: Other, error: </span><span style="color: var(--shiki-token-string-expression)">&quot;Transaction \\&quot;33gQQaoPc9jWePMvDAeyJpcnSPiGUAdtVg8zREWv4GiKjkcGNufgpcbFyRKRrA25NkgjZySEeKue5rawyeH5TzsV\\&quot; failed: None&quot;</span><span style="color: var(--shiki-color-text)"> })</span></span>\n<span><span style="color: var(--shiki-color-text)">Error: Io(Custom { kind: Other, error: </span><span style="color: var(--shiki-token-string-expression)">&quot;Transaction \\&quot;33gQQaoPc9jWePMvDAeyJpcnSPiGUAdtVg8zREWv4GiKjkcGNufgpcbFyRKRrA25NkgjZySEeKue5rawyeH5TzsV\\&quot; failed: None&quot;</span><span style="color: var(--shiki-color-text)"> })</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Nonce to the rescue!"}),"\n",(0,a.jsx)(o.p,{children:"Alice retries the transaction, this time specifying her nonce account and the blockhash stored there"}),"\n",(0,a.jsxs)(o.p,{children:["Remember, ",(0,a.jsx)(o.code,{children:"alice.json"})," is the nonce authority in this example"]}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"$ exzonetwork nonce-account nonce.json\r\n\r\nbalance: 0.1 XZO\r\nminimum balance required: 0.00136416 XZO\r\nnonce: F7vmkY3DTaxfagttWjQweib42b6ZHADSx94Tw8gHx3W7\r\n$ exzonetwork pay -k alice.json --blockhash F7vmkY3DTaxfagttWjQweib42b6ZHADSx94Tw8gHx3W7 --nonce nonce.json bob.json 0.01\r\nHR1368UKHVZyenmH7yVz5sBAijV6XAPeWbEiXEGVYQorRMcoijeNAbzZqEZiH8cDB8tk65ckqeegFjK8dHwNFgQ\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzonetwork nonce-account nonce.json</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">balance: 0.1 XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">minimum balance required: 0.00136416 XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">nonce: F7vmkY3DTaxfagttWjQweib42b6ZHADSx94Tw8gHx3W7</span></span>\n<span><span style="color: var(--shiki-color-text)">$ exzonetwork pay -k alice.json --blockhash F7vmkY3DTaxfagttWjQweib42b6ZHADSx94Tw8gHx3W7 --nonce nonce.json bob.json 0.01</span></span>\n<span><span style="color: var(--shiki-color-text)">HR1368UKHVZyenmH7yVz5sBAijV6XAPeWbEiXEGVYQorRMcoijeNAbzZqEZiH8cDB8tk65ckqeegFjK8dHwNFgQ</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(o.h3,{children:"Success!"}),"\n",(0,a.jsx)(o.p,{children:"The transaction succeeds! Bob receives 0.01 XZO from Alice and Alice's stored nonce advances to a new value"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"$ exzonetwork balance -k bob.json\r\n0.01 XZO\r\nCopy\r\n$ exzonetwork nonce-account nonce.json\r\nbalance: 0.1 XZO\r\nminimum balance required: 0.00136416 XZO\r\nnonce: 6bjroqDcZgTv6Vavhqf81oBHTv3aMnX19UTB51YhAZnN\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ exzonetwork balance -k bob.json</span></span>\n<span><span style="color: var(--shiki-color-text)">0.01 XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">Copy</span></span>\n<span><span style="color: var(--shiki-color-text)">$ exzonetwork nonce-account nonce.json</span></span>\n<span><span style="color: var(--shiki-color-text)">balance: 0.1 XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">minimum balance required: 0.00136416 XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">nonce: 6bjroqDcZgTv6Vavhqf81oBHTv3aMnX19UTB51YhAZnN</span></span>\n<span></span>'}),title:"Command"}),"\n",(0,a.jsx)(t.I,{id:"usage_reference",title:"CLI Usage Reference",level:2,isShow:!1}),"\n",(0,a.jsx)(o.p,{children:"The solana-cli crate provides a command-line interface tool for Exzo Network"}),"\n",(0,a.jsx)(o.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(o.h3,{children:"Get Pubkey"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"// Command\r\n$ exzonetwork-keygen pubkey\r\n\r\n// Return\r\n<PUBKEY>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">// Command</span></span>\n<span><span style="color: var(--shiki-color-text)">$ exzonetwork-keygen pubkey</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">// Return</span></span>\n<span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Example"}),"\n",(0,a.jsx)(o.h3,{children:"Airdrop XZO/Lamports"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:'// Command\r\nexzonetwork airdrop 2\r\n\r\n// Return\r\n"2.00000000 XZO"\n',children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">// Command</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork airdrop 2</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">// Return</span></span>\n<span><span style="color: var(--shiki-token-string-expression)">&quot;2.00000000 XZO&quot;</span></span>\n<span></span>'}),title:"Example"}),"\n",(0,a.jsx)(o.h3,{children:"Get Balance"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:'// Command\r\nexzonetwork balance\r\n\r\n// Return\r\n"3.00050001 XZO"\n',children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">// Command</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork balance</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">// Return</span></span>\n<span><span style="color: var(--shiki-token-string-expression)">&quot;3.00050001 XZO&quot;</span></span>\n<span></span>'}),title:"Example"}),"\n",(0,a.jsx)(o.h3,{children:"Confirm Transaction"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:'// Command\r\nexzonetwork confirm <TX_SIGNATURE>\r\n\r\n// Return\r\n"Confirmed" / "Not found" / "Transaction failed with error <ERR>"\n',children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">// Command</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork confirm </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">TX_SIGNATURE</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">// Return</span></span>\n<span><span style="color: var(--shiki-token-string-expression)">&quot;Confirmed&quot;</span><span style="color: var(--shiki-color-text)"> / </span><span style="color: var(--shiki-token-string-expression)">&quot;Not found&quot;</span><span style="color: var(--shiki-color-text)"> / </span><span style="color: var(--shiki-token-string-expression)">&quot;Transaction failed with error &lt;ERR&gt;&quot;</span></span>\n<span></span>'}),title:"Example"}),"\n",(0,a.jsx)(o.h3,{children:"Deploy program"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"// Command\r\nexzonetwork deploy <PATH>\r\n\r\n// Return\r\n<PROGRAM_ID>\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">// Command</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork deploy </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">// Return</span></span>\n<span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_ID</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'}),title:"Example"}),"\n",(0,a.jsx)(o.h2,{id:"usage-3",children:"Usage"}),"\n",(0,a.jsx)(o.h3,{children:"exzonetwork-cli"}),"\n",(0,a.jsx)(o.pre,{language:"bash",code:"exzonetwork-cli 0.3.6 (src:9e42883d; feat:2960423209)\r\nBlockchain, Rebuilt for Scale\r\n\r\nUSAGE:\r\n    exzonetwork [FLAGS] [OPTIONS] <SUBCOMMAND>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nSUBCOMMANDS:\r\n    account                        Show the contents of an account\r\n    address                        Get your public key\r\n    airdrop                        Request lamports\r\n    authorize-nonce-account        Assign account authority to a new entity\r\n    balance                        Get your balance\r\n    block                          Get a confirmed block\r\n    block-height                   Get current block height\r\n    block-production               Show information about block production\r\n    block-time                     Get estimated production time of a block\r\n    catchup                        Wait for a validator to catch up to the cluster\r\n    cluster-date                   Get current cluster date, computed from genesis creation time and network time\r\n    cluster-version                Get the version of the cluster entrypoint\r\n    config                         Exzonetwork command-line tool configuration settings\r\n    confirm                        Confirm transaction by signature\r\n    create-address-with-seed       Generate a derived account address with a seed\r\n    create-nonce-account           Create a nonce account\r\n    create-stake-account           Create a stake account\r\n    create-vote-account            Create a vote account\r\n    deactivate-stake               Deactivate the delegated stake from the stake account\r\n    decode-transaction             Decode a serialized transaction\r\n    delegate-stake                 Delegate stake to a vote account\r\n    deploy                         Deploy a program\r\n    epoch                          Get current epoch\r\n    epoch-info                     Get information about the current epoch\r\n    feature                        Runtime feature management\r\n    fees                           Display current cluster fees\r\n    first-available-block          Get the first available block in the storage\r\n    genesis-hash                   Get the genesis hash\r\n    gossip                         Show the current gossip network nodes\r\n    help                           Prints this message or the help of the given subcommand(s)\r\n    inflation                      Show inflation information\r\n    largest-accounts               Get addresses of largest cluster accounts\r\n    leader-schedule                Display leader schedule\r\n    live-slots                     Show information about the current slot progression\r\n    logs                           Stream transaction logs\r\n    merge-stake                    Merges one stake account into another\r\n    new-nonce                      Generate a new nonce, rendering the existing nonce useless\r\n    nonce                          Get the current nonce value\r\n    nonce-account                  Show the contents of a nonce account\r\n    ping                           Submit transactions sequentially\r\n    program                        Program management\r\n    rent                           Calculate per-epoch and rent-exempt-minimum values for a given account data\r\n                                   length.\r\n    resolve-signer                 Checks that a signer is valid, and returns its specific path; useful for signers\r\n                                   that may be specified generally, eg. usb://ledger\r\n    slot                           Get current slot\r\n    split-stake                    Duplicate a stake account, splitting the tokens between the two\r\n    stake-account                  Show the contents of a stake account\r\n    stake-authorize                Authorize a new signing keypair for the given stake account\r\n    stake-history                  Show the stake history\r\n    stake-set-lockup               Set Lockup for the stake account\r\n    stakes                         Show stake account information\r\n    supply                         Get information about the cluster supply of XZO\r\n    transaction-count              Get current transaction count\r\n    transaction-history            Show historical transactions affecting the given address from newest to oldest\r\n    transfer                       Transfer funds between system accounts\r\n    validator-info                 Publish/get Validator info on Exzonetwork\r\n    validators                     Show summary information about the current validators\r\n    vote-account                   Show the contents of a vote account\r\n    vote-authorize-voter           Authorize a new vote signing keypair for the given vote account\r\n    vote-authorize-withdrawer      Authorize a new withdraw signing keypair for the given vote account\r\n    vote-update-commission         Update the vote accounts commission\r\n    vote-update-validator          Update the vote accounts validator identity\r\n    wait-for-max-stake             Wait for the max stake of any one node to drop below a percentage of total.\r\n    withdraw-from-nonce-account    Withdraw XZO from the nonce account\r\n    withdraw-from-vote-account     Withdraw lamports from a vote account into a specified account\r\n    withdraw-stake                 Withdraw the unstaked XZO from the stake account\r\nexzonetwork-account#\r\nexzonetwork-account\r\nShow the contents of an account\r\n\r\nUSAGE:\r\n    exzonetwork account [FLAGS] [OPTIONS] <ACCOUNT_ADDRESS>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --lamports                       Display balance in lamports instead of XZO\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetworks JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n    -o, --output-file <FILEPATH>           Write the account data to this file\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <ACCOUNT_ADDRESS>    Account key URI. , one of:\r\n                           * a base58-encoded public key\r\n                           * a path to a keypair file\r\n                           * a hyphen; signals a JSON-encoded keypair on stdin\r\n                           * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                           * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-address#\r\nexzonetwork-address\r\nGet your public key\r\n\r\nUSAGE:\r\n    exzonetwork address [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n        --confirm-key                    Confirm key on device; only relevant if using remote wallet\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-airdrop#\r\nexzonetwork-airdrop\r\nRequest lamports\r\n\r\nUSAGE:\r\n    exzonetwork airdrop [FLAGS] [OPTIONS] <AMOUNT> [RECIPIENT_ADDRESS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n        --faucet-host <URL>                Faucet host to use [default: the --url host]\r\n        --faucet-port <PORT_NUMBER>        Faucet port to use [default: 9900]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetworks JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <AMOUNT>               The airdrop amount to request, in XZO    <RECIPIENT_ADDRESS>    The account address of airdrop recipient. , one of:\r\n                             * a base58-encoded public key\r\n                             * a path to a keypair file\r\n                             * a hyphen; signals a JSON-encoded keypair on stdin\r\n                             * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                             * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-authorize-nonce-account#\r\nexzonetwork-authorize-nonce-account\r\nAssign account authority to a new entity\r\n\r\nUSAGE:\r\n    exzo authorize-nonce-account [FLAGS] [OPTIONS] <NONCE_ACCOUNT_ADDRESS> <AUTHORITY_PUBKEY>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --nonce-authority <KEYPAIR>        Provide the nonce authority keypair to use when signing a nonced transaction\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <NONCE_ACCOUNT_ADDRESS>    Address of the nonce account. , one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <AUTHORITY_PUBKEY>         Account to be granted authority of the nonce account. , one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-balance#\r\nexzonetwork-balance\r\nGet your balance\r\n\r\nUSAGE:\r\n    exzonetwork balance [FLAGS] [OPTIONS] [ACCOUNT_ADDRESS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --lamports                       Display balance in lamports instead of XZO\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <ACCOUNT_ADDRESS>    The account address of the balance to check. , one of:\r\n                           * a base58-encoded public key\r\n                           * a path to a keypair file\r\n                           * a hyphen; signals a JSON-encoded keypair on stdin\r\n                           * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                           * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-block#\r\nexzonetwork-block\r\nGet a confirmed block\r\n\r\nUSAGE:\r\n    exzonetwork block [FLAGS] [OPTIONS] [SLOT]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <SLOT>\r\nexzonetwork-block-height#\r\nexzonetwork-block-height\r\nGet current block height\r\n\r\nUSAGE:\r\n    exzonetwork block-height [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-block-production#\r\nexzonetwork-block-production\r\nShow information about block production\r\n\r\nUSAGE:\r\n    exzonetwork block-production [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n        --epoch <epoch>                    Epoch to show block production for [default: current epoch]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --slot-limit <slot_limit>          Limit results to this many slots from the end of the epoch [default: full\r\n                                           epoch]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-block-time#\r\nexzonetwork-block-time\r\nGet estimated production time of a block\r\n\r\nUSAGE:\r\n    exzonetwork block-time [FLAGS] [OPTIONS] [SLOT]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <SLOT>    Slot number of the block to query\r\nexzonetwork-catchup#\r\nexzonetwork-catchup\r\nWait for a validator to catch up to the cluster\r\n\r\nUSAGE:\r\n    exzonetwork catchup [FLAGS] [OPTIONS] [ARGS]\r\n\r\nFLAGS:\r\n        --follow                         Continue reporting progress even after the validator has caught up\r\n    -h, --help                           Prints help information\r\n        --log                            Do not update the progress inplace; instead show updates with its own new lines\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --our-localhost <PORT>             Guess Identity pubkey and validator rpc node assuming local (possibly\r\n                                           private) validator [default: 8899]\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <OUR_VALIDATOR_PUBKEY>    Identity pubkey of the validator, one of:\r\n                                * a base58-encoded public key\r\n                                * a path to a keypair file\r\n                                * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <OUR_URL>                 JSON RPC URL for validator, which is useful for validators with a private RPC service\r\nexzonetwork-cluster-date#\r\nexzonetwork-cluster-date\r\nGet current cluster date, computed from genesis creation time and network time\r\n\r\nUSAGE:\r\n    exzonetwork cluster-date [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-cluster-version#\r\nexzonetwork -cluster-version\r\nGet the version of the cluster entrypoint\r\n\r\nUSAGE:\r\n    exzonetwork cluster-version [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-config#\r\nexzonetwork -config\r\nexzonetwork command-line tool configuration settings\r\n\r\nUSAGE:\r\n    exzonetwork config [FLAGS] [OPTIONS] <SUBCOMMAND>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nSUBCOMMANDS:\r\n    export-address-labels    Export the current address labels\r\n    get                      Get current config settings\r\n    help                     Prints this message or the help of the given subcommand(s)\r\n    import-address-labels    Import a list of address labels\r\n    set                      Set a config setting\r\nexzonetwork-confirm#\r\nexzonetwork -confirm\r\nConfirm transaction by signature\r\n\r\nUSAGE:\r\n    exzonetwork confirm [FLAGS] [OPTIONS] <TRANSACTION_SIGNATURE>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetworks JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <TRANSACTION_SIGNATURE>    The transaction signature to confirm\r\n\r\nNote: This will show more detailed information for finalized transactions with verbose mode (-v/--verbose).\r\n\r\nAccount modes:\r\n  |srwx|\r\n    s: signed\r\n    r: readable (always true)\r\n    w: writable\r\n    x: program account (inner instructions excluded)\r\nexzonetwork-create-address-with-seed#\r\nexzonetwork -create-address-with-seed\r\nGenerate a derived account address with a seed\r\n\r\nUSAGE:\r\n    exzonetwork create-address-with-seed [FLAGS] [OPTIONS] <SEED_STRING> <PROGRAM_ID>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n        --from <FROM_PUBKEY>               From (base) key, [default: cli config keypair]. , one of:\r\n                                             * a base58-encoded public key\r\n                                             * a path to a keypair file\r\n                                             * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                             * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                             * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <SEED_STRING>    The seed.  Must not take more than 32 bytes to encode as utf-8\r\n    <PROGRAM_ID>     The program_id that the address will ultimately be used for,\r\n                     or one of NONCE, STAKE, and VOTE keywords\r\nexzonetwork-create-nonce-account#\r\nexzonetwork -create-nonce-account\r\nCreate a nonce account\r\n\r\nUSAGE:\r\n    exzonetwork create-nonce-account [FLAGS] [OPTIONS] <ACCOUNT_KEYPAIR> <AMOUNT>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --nonce-authority <PUBKEY>         Assign noncing authority to another entity. , one of:\r\n                                             * a base58-encoded public key\r\n                                             * a path to a keypair file\r\n                                             * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                             * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                             * a hardware wallet keypair URL (i.e. usb://ledger)\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --seed <STRING>                    Seed for address generation; if specified, the resulting account will be at a\r\n                                           derived address of the NONCE_ACCOUNT pubkey\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <ACCOUNT_KEYPAIR>    Keypair of the nonce account to fund\r\n    <AMOUNT>             The amount to load the nonce account with, in XZO; accepts keyword ALL\r\nexzonetwork-create-stake-account#\r\nexzonetwork -create-stake-account\r\nCreate a stake account\r\n\r\nUSAGE:\r\n    exzonetwork create-stake-account [FLAGS] [OPTIONS] <STAKE_ACCOUNT_KEYPAIR> <AMOUNT>\r\n\r\nFLAGS:\r\n        --dump-transaction-message       Display the base64 encoded binary transaction message in sign-only mode\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --sign-only                      Sign the transaction offline\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --blockhash <BLOCKHASH>             Use the supplied blockhash\r\n        --commitment <COMMITMENT_LEVEL>     Return information at the selected commitment level [possible values:\r\n                                            processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                 Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n        --custodian <PUBKEY>                Authority to modify lockups. , one of:\r\n                                              * a base58-encoded public key\r\n                                              * a path to a keypair file\r\n                                              * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                              * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                              * a hardware wallet keypair URL (i.e. usb://ledger)\r\n        --fee-payer <KEYPAIR>               Specify the fee-payer account. This may be a keypair file, the ASK keyword\r\n                                            or the pubkey of an offline signer, provided an appropriate --signer\r\n                                            argument\r\n                                            is also passed. Defaults to the client keypair.\r\n        --from <KEYPAIR>                    Source account of funds [default: cli config keypair]\r\n    -u, --url <URL_OR_MONIKER>              URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                            testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                 Filepath or URL to a keypair\r\n        --lockup-date <RFC3339 DATETIME>    The date and time at which this account will be available for withdrawal\r\n        --lockup-epoch <NUMBER>             The epoch height at which this account will be available for withdrawal\r\n        --nonce <PUBKEY>                    Provide the nonce account to use when creating a nonced\r\n                                            transaction. Nonced transactions are useful when a transaction\r\n                                            requires a lengthy signing process. Learn more about nonced\r\n                                            transactions at https://docs. exzonetwork.com/cli/durable-nonce/\r\n        --nonce-authority <KEYPAIR>         Provide the nonce authority keypair to use when signing a nonced transaction\r\n        --output <FORMAT>                   Return information in specified output format [possible values: json, json-\r\n                                            compact]\r\n        --seed <STRING>                     Seed for address generation; if specified, the resulting account will be at\r\n                                            a derived address of the STAKE_ACCOUNT_KEYPAIR pubkey\r\n        --signer <PUBKEY=SIGNATURE>...      Provide a public-key/signature pair for the transaction\r\n        --stake-authority <PUBKEY>          Authorized staker [default: cli config keypair]\r\n        --ws <URL>                          WebSocket URL for the exzonetwork cluster\r\n        --withdraw-authority <PUBKEY>       Authorized withdrawer [default: cli config keypair]\r\n\r\nARGS:\r\n    <STAKE_ACCOUNT_KEYPAIR>    Stake account to create (or base of derived address if --seed is used)\r\n    <AMOUNT>                   The amount to send to the stake account, in XZO; accepts keyword ALL\r\nexzonetwork-create-vote-account#\r\nexzonetwork -create-vote-account\r\nCreate a vote account\r\n\r\nUSAGE:\r\n    exzonetwork create-vote-account [FLAGS] [OPTIONS] <ACCOUNT_KEYPAIR> <IDENTITY_KEYPAIR>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --authorized-voter <VOTER_PUBKEY>\r\n            Public key of the authorized voter [default: validator identity pubkey]. , one of:\r\n              * a base58-encoded public key\r\n              * a path to a keypair file\r\n              * a hyphen; signals a JSON-encoded keypair on stdin\r\n              * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n              * a hardware wallet keypair URL (i.e. usb://ledger)\r\n        --authorized-withdrawer <WITHDRAWER_PUBKEY>\r\n            Public key of the authorized withdrawer [default: validator identity pubkey]. , one of:\r\n              * a base58-encoded public key\r\n              * a path to a keypair file\r\n              * a hyphen; signals a JSON-encoded keypair on stdin\r\n              * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n              * a hardware wallet keypair URL (i.e. usb://ledger)\r\n        --commission <PERCENTAGE>                      The commission taken on reward redemption (0-100) [default: 100]\r\n        --commitment <COMMITMENT_LEVEL>\r\n            Return information at the selected commitment level [possible values: processed, confirmed, finalized]\r\n\r\n    -C, --config <FILEPATH>\r\n            Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n\r\n    -u, --url <URL_OR_MONIKER>\r\n            URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta, testnet, devnet, localhost]\r\n\r\n    -k, --keypair <KEYPAIR>                            Filepath or URL to a keypair\r\n        --with-memo <MEMO>                             Specify a memo string to include in the transaction.\r\n        --output <FORMAT>\r\n            Return information in specified output format [possible values: json, json-compact]\r\n\r\n        --seed <STRING>\r\n            Seed for address generation; if specified, the resulting account will be at a derived address of the VOTE\r\n            ACCOUNT pubkey\r\n        --ws <URL>                                     WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <ACCOUNT_KEYPAIR>     Vote account keypair to create\r\n    <IDENTITY_KEYPAIR>    Keypair of validator that will vote with this account\r\nexzonetwork-deactivate-stake#\r\nexzonetwork-deactivate-stake\r\nDeactivate the delegated stake from the stake account\r\n\r\nUSAGE:\r\n    exzonetwork deactivate-stake [FLAGS] [OPTIONS] <STAKE_ACCOUNT_ADDRESS>\r\n\r\nFLAGS:\r\n        --dump-transaction-message       Display the base64 encoded binary transaction message in sign-only mode\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --sign-only                      Sign the transaction offline\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --blockhash <BLOCKHASH>            Use the supplied blockhash\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n        --fee-payer <KEYPAIR>              Specify the fee-payer account. This may be a keypair file, the ASK keyword\r\n                                           or the pubkey of an offline signer, provided an appropriate --signer argument\r\n                                           is also passed. Defaults to the client keypair.\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --nonce <PUBKEY>                   Provide the nonce account to use when creating a nonced\r\n                                           transaction. Nonced transactions are useful when a transaction\r\n                                           requires a lengthy signing process. Learn more about nonced\r\n                                           transactions at https://docs.exzonetwork.com/cli/durable-nonce/\r\n        --nonce-authority <KEYPAIR>        Provide the nonce authority keypair to use when signing a nonced transaction\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --seed <STRING>                    Seed for address generation; if specified, the resulting account will be at a\r\n                                           derived address of STAKE_ACCOUNT_ADDRESS\r\n        --signer <PUBKEY=SIGNATURE>...     Provide a public-key/signature pair for the transaction\r\n        --stake-authority <KEYPAIR>        Authorized staker [default: cli config keypair]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <STAKE_ACCOUNT_ADDRESS>    Stake account to be deactivated (or base of derived address if --seed is used). , one\r\n                               of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-decode-transaction#\r\nexzonetwork-decode-transaction\r\nDecode a serialized transaction\r\n\r\nUSAGE:\r\n    exzonetwork decode-transaction [FLAGS] [OPTIONS] <TRANSACTION> <ENCODING>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <TRANSACTION>    transaction to decode\r\n    <ENCODING>       transaction encoding [default: base58]  [possible values: base58, base64]\r\nexzonetwork-delegate-stake#\r\nexzonetwork-delegate-stake\r\nDelegate stake to a vote account\r\n\r\nUSAGE:\r\n    exzonetwork delegate-stake [FLAGS] [OPTIONS] <STAKE_ACCOUNT_ADDRESS> <VOTE_ACCOUNT_ADDRESS>\r\n\r\nFLAGS:\r\n        --dump-transaction-message       Display the base64 encoded binary transaction message in sign-only mode\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --sign-only                      Sign the transaction offline\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --blockhash <BLOCKHASH>            Use the supplied blockhash\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n        --fee-payer <KEYPAIR>              Specify the fee-payer account. This may be a keypair file, the ASK keyword\r\n                                           or the pubkey of an offline signer, provided an appropriate --signer argument\r\n                                           is also passed. Defaults to the client keypair.\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --nonce <PUBKEY>                   Provide the nonce account to use when creating a nonced\r\n                                           transaction. Nonced transactions are useful when a transaction\r\n                                           requires a lengthy signing process. Learn more about nonced\r\n                                           transactions at https://docs.exzonetwork.com/cli/durable-nonce/\r\n        --nonce-authority <KEYPAIR>        Provide the nonce authority keypair to use when signing a nonced transaction\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --signer <PUBKEY=SIGNATURE>...     Provide a public-key/signature pair for the transaction\r\n        --stake-authority <KEYPAIR>        Authorized staker [default: cli config keypair]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <STAKE_ACCOUNT_ADDRESS>    Stake account to delegate, one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <VOTE_ACCOUNT_ADDRESS>     The vote account to which the stake will be delegated, one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-deploy#\r\nexzonetwork-deploy\r\nDeploy a program\r\n\r\nUSAGE:\r\n    exzonetwork deploy [FLAGS] [OPTIONS] <PROGRAM_FILEPATH> [PROGRAM_ADDRESS_SIGNER]\r\n\r\nFLAGS:\r\n        --allow-excessive-deploy-account-balance\r\n            Use the designated program id, even if the account already holds a large balance of XZO\r\n\r\n    -h, --help                                      Prints help information\r\n        --no-address-labels                         Do not use address labels in the output\r\n        --skip-seed-phrase-validation\r\n            Skip validation of seed phrases. Use this if your phrase does not use the BIP39 official English word list\r\n\r\n    -V, --version                                   Prints version information\r\n    -v, --verbose                                   Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <PROGRAM_FILEPATH>          /path/to/program.o\r\n    <PROGRAM_ADDRESS_SIGNER>    The signer for the desired address of the program [default: new random address]\r\nexnonetwork-epoch#\r\nexzonetwork -epoch\r\nGet current epoch\r\n\r\nUSAGE:\r\n    exzonetwork epoch [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-epoch-info#\r\nexzonetwork-epoch-info\r\nGet information about the current epoch\r\n\r\nUSAGE:\r\n    exzonetwork epoch-info [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nExzonetwork-feature#\r\nexzonetwork-feature\r\nRuntime feature management\r\n\r\nUSAGE:\r\n    exzonetwork feature [FLAGS] [OPTIONS] <SUBCOMMAND>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nSUBCOMMANDS:\r\n    activate    Activate a runtime feature\r\n    help        Prints this message or the help of the given subcommand(s)\r\n    status      Query runtime feature status\r\nexzonetwork-fees#\r\nexzonetwork-fees\r\nDisplay current cluster fees\r\n\r\nUSAGE:\r\n    exzonetwork fees [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --blockhash <BLOCKHASH>            Query fees for BLOCKHASH instead of the the most recent blockhash\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-first-available-block#\r\nexzonetwork-first-available-block\r\nGet the first available block in the storage\r\n\r\nUSAGE:\r\n    exzonetwork first-available-block [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-genesis-hash#\r\nexzonetwork-genesis-hash\r\nGet the genesis hash\r\n\r\nUSAGE:\r\n    exzonetwork genesis-hash [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-gossip#\r\nexzonetwork-gossip\r\nShow the current gossip network nodes\r\n\r\nUSAGE:\r\n    exzonetwork gossip [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-help#\r\nexzonetwork-help\r\nPrints this message or the help of the given subcommand(s)\r\n\r\nUSAGE:\r\n    exzonetwork help [subcommand]...\r\n\r\nARGS:\r\n    <subcommand>...    The subcommand whose help message to display\r\nexzonetwork-inflation#\r\nexzonetwork-inflation\r\nShow inflation information\r\n\r\nUSAGE:\r\n    exzonetwork inflation [FLAGS] [OPTIONS] [SUBCOMMAND]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nSUBCOMMANDS:\r\n    help       Prints this message or the help of the given subcommand(s)\r\n    rewards    Show inflation rewards for a set of addresses\r\nexzonetwork-largest-accounts#\r\nexzonetwork-largest-accounts\r\nGet addresses of largest cluster accounts\r\n\r\nUSAGE:\r\n    exzonetwork largest-accounts [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n        --circulating                    Filter address list to only circulating accounts\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --non-circulating                Filter address list to only non-circulating accounts\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-leader-schedule#\r\nexzonetwork-leader-schedule\r\nDisplay leader schedule\r\n\r\nUSAGE:\r\n    exzonetwork leader-schedule [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n        --epoch <EPOCH>                    Epoch to show leader schedule for. (default: current)\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-live-slots#\r\nexzonetwork-live-slots\r\nShow information about the current slot progression\r\n\r\nUSAGE:\r\n    exzonetwork live-slots [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nExzonetwork-logs#\r\nexzonetwork-logs\r\nStream transaction logs\r\n\r\nUSAGE:\r\n    exzonetwork logs [FLAGS] [OPTIONS] [ADDRESS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --include-votes                  Include vote transactions when monitoring all transactions\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <ADDRESS>    Account address to monitor [default: monitor all transactions except for votes] , one of:\r\n                   * a base58-encoded public key\r\n                   * a path to a keypair file\r\n                   * a hyphen; signals a JSON-encoded keypair on stdin\r\n                   * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                   * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-merge-stake#\r\nexzonetwork-merge-stake\r\nMerges one stake account into another\r\n\r\nUSAGE:\r\n    exzonetwork merge-stake [FLAGS] [OPTIONS] <STAKE_ACCOUNT_ADDRESS> <SOURCE_STAKE_ACCOUNT_ADDRESS>\r\n\r\nFLAGS:\r\n        --dump-transaction-message       Display the base64 encoded binary transaction message in sign-only mode\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --sign-only                      Sign the transaction offline\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --blockhash <BLOCKHASH>            Use the supplied blockhash\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n        --fee-payer <KEYPAIR>              Specify the fee-payer account. This may be a keypair file, the ASK keyword\r\n                                           or the pubkey of an offline signer, provided an appropriate --signer argument\r\n                                           is also passed. Defaults to the client keypair.\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --nonce <PUBKEY>                   Provide the nonce account to use when creating a nonced\r\n                                           transaction. Nonced transactions are useful when a transaction\r\n                                           requires a lengthy signing process. Learn more about nonced\r\n                                           transactions at https://docs.exzonetwork.com/cli/durable-nonce/\r\n        --nonce-authority <KEYPAIR>        Provide the nonce authority keypair to use when signing a nonced transaction\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --signer <PUBKEY=SIGNATURE>...     Provide a public-key/signature pair for the transaction\r\n        --stake-authority <KEYPAIR>        Authorized staker [default: cli config keypair]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <STAKE_ACCOUNT_ADDRESS>           Stake account to merge into, one of:\r\n                                        * a base58-encoded public key\r\n                                        * a path to a keypair file\r\n                                        * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                        * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                        * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <SOURCE_STAKE_ACCOUNT_ADDRESS>    Source stake account for the merge.  If successful, this stake account will no\r\n                                      longer exist after the merge, one of:\r\n                                        * a base58-encoded public key\r\n                                        * a path to a keypair file\r\n                                        * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                        * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                        * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-new-nonce#\r\nexzonetwork-new-nonce\r\nGenerate a new nonce, rendering the existing nonce useless\r\n\r\nUSAGE:\r\n    exzonetwork new-nonce [FLAGS] [OPTIONS] <NONCE_ACCOUNT_ADDRESS>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --nonce-authority <KEYPAIR>        Provide the nonce authority keypair to use when signing a nonced transaction\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <NONCE_ACCOUNT_ADDRESS>    Address of the nonce account. , one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-nonce#\r\nexzonetwork-nonce\r\nGet the current nonce value\r\n\r\nUSAGE:\r\n    exzonetwork nonce [FLAGS] [OPTIONS] <NONCE_ACCOUNT_ADDRESS>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <NONCE_ACCOUNT_ADDRESS>    Address of the nonce account to display. , one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-nonce-account#\r\nexzonetwork-nonce-account\r\nShow the contents of a nonce account\r\n\r\nUSAGE:\r\n    exzonetwork nonce-account [FLAGS] [OPTIONS] <NONCE_ACCOUNT_ADDRESS>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --lamports                       Display balance in lamports instead of XZO\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <NONCE_ACCOUNT_ADDRESS>    Address of the nonce account to display. , one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork -ping#\r\nexzonetwork-ping\r\nSubmit transactions sequentially\r\n\r\nUSAGE:\r\n    exzonetwork ping [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n    -D, --print-timestamp                Print timestamp (unix time + microseconds as in gettimeofday) before each line\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --blockhash <BLOCKHASH>            Use the supplied blockhash\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -c, --count <NUMBER>                   Stop after submitting count transactions\r\n    -i, --interval <SECONDS>               Wait interval seconds between submitting the next transaction [default: 2]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --lamports <NUMBER>                Number of lamports to transfer for each transaction [default: 1]\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n    -t, --timeout <SECONDS>                Wait up to timeout seconds for transaction confirmation [default: 15]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-program#\r\nexzonetwork-program\r\nProgram management\r\n\r\nUSAGE:\r\n    exzonetwork program [FLAGS] [OPTIONS] <SUBCOMMAND>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nSUBCOMMANDS:\r\n    close                    Close an acount and withdraw all lamports\r\n    deploy                   Deploy a program\r\n    dump                     Write the program data to a file\r\n    help                     Prints this message or the help of the given subcommand(s)\r\n    set-buffer-authority     Set a new buffer authority\r\n    set-upgrade-authority    Set a new program authority\r\n    show                     Display information about a buffer or program\r\n    write-buffer             Writes a program into a buffer account\r\nexzonetwork-rent#\r\nexzonetwork-rent\r\nCalculate per-epoch and rent-exempt-minimum values for a given account data length.\r\n\r\nUSAGE:\r\n    exzonetwork rent [FLAGS] [OPTIONS] <DATA_LENGTH_OR_MONIKER>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --lamports                       Display rent in lamports instead of XZO\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <DATA_LENGTH_OR_MONIKER>    Length of data in the account to calculate rent for, or moniker: [nonce, stake,\r\n                                system, vote]\r\nexzonetwork-resolve-signer#\r\nexzonetwork-resolve-signer\r\nChecks that a signer is valid, and returns its specific path; useful for signers that may be specified generally, eg.\r\nusb://ledger\r\n\r\nUSAGE:\r\n    Exzonetwork resolve-signer [FLAGS] [OPTIONS] <SIGNER_KEYPAIR>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <SIGNER_KEYPAIR>    The signer path to resolve\r\nexzonetwork-slot#\r\nexzonetwork-slot\r\nGet current slot\r\n\r\nUSAGE:\r\n    exzonetwork slot [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-split-stake#\r\nexzonetwork-split-stake\r\nDuplicate a stake account, splitting the tokens between the two\r\n\r\nUSAGE:\r\n    Exzonetwork split-stake [FLAGS] [OPTIONS] <STAKE_ACCOUNT_ADDRESS> <SPLIT_STAKE_ACCOUNT> <AMOUNT>\r\n\r\nFLAGS:\r\n        --dump-transaction-message       Display the base64 encoded binary transaction message in sign-only mode\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --sign-only                      Sign the transaction offline\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --blockhash <BLOCKHASH>            Use the supplied blockhash\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n        --fee-payer <KEYPAIR>              Specify the fee-payer account. This may be a keypair file, the ASK keyword\r\n                                           or the pubkey of an offline signer, provided an appropriate --signer argument\r\n                                           is also passed. Defaults to the client keypair.\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --nonce <PUBKEY>                   Provide the nonce account to use when creating a nonced\r\n                                           transaction. Nonced transactions are useful when a transaction\r\n                                           requires a lengthy signing process. Learn more about nonced\r\n                                           transactions at https://docs.exzonetwork.com/cli/durable-nonce/\r\n        --nonce-authority <KEYPAIR>        Provide the nonce authority keypair to use when signing a nonced transaction\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --seed <STRING>                    Seed for address generation; if specified, the resulting account will be at a\r\n                                           derived address of SPLIT_STAKE_ACCOUNT\r\n        --signer <PUBKEY=SIGNATURE>...     Provide a public-key/signature pair for the transaction\r\n        --stake-authority <KEYPAIR>        Authorized staker [default: cli config keypair]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <STAKE_ACCOUNT_ADDRESS>    Stake account to split (or base of derived address if --seed is used). , one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <SPLIT_STAKE_ACCOUNT>      Keypair of the new stake account\r\n    <AMOUNT>                   The amount to move into the new stake account, in XZO\r\nexzonetwork-stake-account#\r\nexzonetwork-stake-account\r\nShow the contents of a stake account\r\n\r\nUSAGE:\r\n    exzonetwork stake-account [FLAGS] [OPTIONS] <STAKE_ACCOUNT_ADDRESS>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --lamports                       Display balance in lamports instead of XZO\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n        --with-rewards                   Display inflation rewards\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --num-rewards-epochs <NUM>         Display rewards for NUM recent epochs, max 10 [default: latest epoch only]\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <STAKE_ACCOUNT_ADDRESS>    The stake account to display. , one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-stake-authorize#\r\nexzonetwork-stake-authorize\r\nAuthorize a new signing keypair for the given stake account\r\n\r\nUSAGE:\r\n    Exzonetwork stake-authorize [FLAGS] [OPTIONS] <STAKE_ACCOUNT_ADDRESS> --new-stake-authority <PUBKEY> --new-withdraw-authority <PUBKEY>\r\n\r\nFLAGS:\r\n        --dump-transaction-message       Display the base64 encoded binary transaction message in sign-only mode\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --sign-only                      Sign the transaction offline\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --blockhash <BLOCKHASH>              Use the supplied blockhash\r\n        --commitment <COMMITMENT_LEVEL>      Return information at the selected commitment level [possible values:\r\n                                             processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                  Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n        --custodian <KEYPAIR>                Authority to override account lockup\r\n        --fee-payer <KEYPAIR>                Specify the fee-payer account. This may be a keypair file, the ASK keyword\r\n                                             or the pubkey of an offline signer, provided an appropriate --signer\r\n                                             argument\r\n                                             is also passed. Defaults to the client keypair.\r\n    -u, --url <URL_OR_MONIKER>               URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-\r\n                                             beta, testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                  Filepath or URL to a keypair\r\n        --new-stake-authority <PUBKEY>       New authorized staker, one of:\r\n                                               * a base58-encoded public key\r\n                                               * a path to a keypair file\r\n                                               * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                               * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                               * a hardware wallet keypair URL (i.e. usb://ledger)\r\n        --new-withdraw-authority <PUBKEY>    New authorized withdrawer. , one of:\r\n                                               * a base58-encoded public key\r\n                                               * a path to a keypair file\r\n                                               * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                               * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                               * a hardware wallet keypair URL (i.e. usb://ledger)\r\n        --nonce <PUBKEY>                     Provide the nonce account to use when creating a nonced\r\n                                             transaction. Nonced transactions are useful when a transaction\r\n                                             requires a lengthy signing process. Learn more about nonced\r\n                                             transactions at https://docs.exzonetwork.com/cli/durable-nonce/\r\n        --nonce-authority <KEYPAIR>          Provide the nonce authority keypair to use when signing a nonced\r\n                                             transaction\r\n        --output <FORMAT>                    Return information in specified output format [possible values: json, json-\r\n                                             compact]\r\n        --signer <PUBKEY=SIGNATURE>...       Provide a public-key/signature pair for the transaction\r\n        --stake-authority <KEYPAIR>          Authorized staker [default: cli config keypair]\r\n        --ws <URL>                           WebSocket URL for the exzonetwork cluster\r\n        --withdraw-authority <KEYPAIR>       Authorized withdrawer [default: cli config keypair]\r\n\r\nARGS:\r\n    <STAKE_ACCOUNT_ADDRESS>    Stake account in which to set a new authority. , one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-stake-history#\r\nexzonetwork-stake-history\r\nShow the stake history\r\n\r\nUSAGE:\r\n    exzonetwork stake-history [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --lamports                       Display balance in lamports instead of XZO\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --limit <NUM>                      Display NUM recent epochs worth of stake history in text mode. 0 for all\r\n                                           [default: 10]\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-stake-set-lockup#\r\nexzonetwork-stake-set-lockup\r\nSet Lockup for the stake account\r\n\r\nUSAGE:\r\n    exzonetwork stake-set-lockup [FLAGS] [OPTIONS] <STAKE_ACCOUNT_ADDRESS> <--lockup-epoch <NUMBER>|--lockup-date <RFC3339 DATETIME>|--new-custodian <PUBKEY>>\r\n\r\nFLAGS:\r\n        --dump-transaction-message       Display the base64 encoded binary transaction message in sign-only mode\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --sign-only                      Sign the transaction offline\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --blockhash <BLOCKHASH>             Use the supplied blockhash\r\n        --commitment <COMMITMENT_LEVEL>     Return information at the selected commitment level [possible values:\r\n                                            processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                 Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n        --custodian <KEYPAIR>               Keypair of the existing custodian [default: cli config pubkey]\r\n        --fee-payer <KEYPAIR>               Specify the fee-payer account. This may be a keypair file, the ASK keyword\r\n                                            or the pubkey of an offline signer, provided an appropriate --signer\r\n                                            argument\r\n                                            is also passed. Defaults to the client keypair.\r\n    -u, --url <URL_OR_MONIKER>              URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                            testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                 Filepath or URL to a keypair\r\n        --lockup-date <RFC3339 DATETIME>    The date and time at which this account will be available for withdrawal\r\n        --lockup-epoch <NUMBER>             The epoch height at which this account will be available for withdrawal\r\n        --new-custodian <PUBKEY>            Identity of a new lockup custodian. , one of:\r\n                                              * a base58-encoded public key\r\n                                              * a path to a keypair file\r\n                                              * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                              * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                              * a hardware wallet keypair URL (i.e. usb://ledger)\r\n        --nonce <PUBKEY>                    Provide the nonce account to use when creating a nonced\r\n                                            transaction. Nonced transactions are useful when a transaction\r\n                                            requires a lengthy signing process. Learn more about nonced\r\n                                            transactions at https://docs.exzonetwork.com/cli/durable-nonce/\r\n        --nonce-authority <KEYPAIR>         Provide the nonce authority keypair to use when signing a nonced transaction\r\n        --output <FORMAT>                   Return information in specified output format [possible values: json, json-\r\n                                            compact]\r\n        --signer <PUBKEY=SIGNATURE>...      Provide a public-key/signature pair for the transaction\r\n        --ws <URL>                          WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <STAKE_ACCOUNT_ADDRESS>    Stake account for which to set lockup parameters. , one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-stakes#\r\nexzonetwork-stakes\r\nShow stake account information\r\n\r\nUSAGE:\r\n    exzonetwork stakes [FLAGS] [OPTIONS] [VOTE_ACCOUNT_PUBKEYS]...\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --lamports                       Display balance in lamports instead of XZO\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <VOTE_ACCOUNT_PUBKEYS>...    Only show stake accounts delegated to the provided vote accounts. , one of:\r\n                                   * a base58-encoded public key\r\n                                   * a path to a keypair file\r\n                                   * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                   * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                   * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-supply#\r\nexzonetwork-supply\r\nGet information about the cluster supply of XZO\r\n\r\nUSAGE:\r\n    exzonetwork supply [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --print-accounts                 Print list of non-circualting account addresses\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-transaction-count#\r\nexzonetwork-transaction-count\r\nGet current transaction count\r\n\r\nUSAGE:\r\n    exzonetwork transaction-count [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-transaction-history#\r\nexzonetwork-transaction-history\r\nShow historical transactions affecting the given address from newest to oldest\r\n\r\nUSAGE:\r\n    exzonetwork transaction-history [FLAGS] [OPTIONS] <ADDRESS>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --show-transactions              Display the full transactions\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --before <TRANSACTION_SIGNATURE>    Start with the first signature older than this one\r\n        --commitment <COMMITMENT_LEVEL>     Return information at the selected commitment level [possible values:\r\n                                            processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                 Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>              URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                            testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                 Filepath or URL to a keypair\r\n        --limit <LIMIT>                     Maximum number of transaction signatures to return [default: 1000]\r\n        --output <FORMAT>                   Return information in specified output format [possible values: json, json-\r\n                                            compact]\r\n        --ws <URL>                          WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <ADDRESS>    Account address, one of:\r\n                   * a base58-encoded public key\r\n                   * a path to a keypair file\r\n                   * a hyphen; signals a JSON-encoded keypair on stdin\r\n                   * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                   * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-transfer#\r\nexzonetwork-transfer\r\nTransfer funds between system accounts\r\n\r\nUSAGE:\r\n    exzonetwork transfer [FLAGS] [OPTIONS] <RECIPIENT_ADDRESS> <AMOUNT>\r\n\r\nFLAGS:\r\n        --allow-unfunded-recipient       Complete the transfer even if the recipient address is not funded\r\n        --dump-transaction-message       Display the base64 encoded binary transaction message in sign-only mode\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --no-wait                        Return signature immediately after submitting the transaction, instead of\r\n                                         waiting for confirmations\r\n        --sign-only                      Sign the transaction offline\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --blockhash <BLOCKHASH>            Use the supplied blockhash\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n        --fee-payer <KEYPAIR>              Specify the fee-payer account. This may be a keypair file, the ASK keyword\r\n                                           or the pubkey of an offline signer, provided an appropriate --signer argument\r\n                                           is also passed. Defaults to the client keypair.\r\n        --from <FROM_ADDRESS>              Source account of funds (if different from client local account). , one of:\r\n                                             * a base58-encoded public key\r\n                                             * a path to a keypair file\r\n                                             * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                             * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                             * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --with-memo <MEMO>                 Specify a memo string to include in the transaction.\r\n        --nonce <PUBKEY>                   Provide the nonce account to use when creating a nonced\r\n                                           transaction. Nonced transactions are useful when a transaction\r\n                                           requires a lengthy signing process. Learn more about nonced\r\n                                           transactions at https://docs.exzonetwork.com/cli/durable-nonce/\r\n        --nonce-authority <KEYPAIR>        Provide the nonce authority keypair to use when signing a nonced transaction\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --signer <PUBKEY=SIGNATURE>...     Provide a public-key/signature pair for the transaction\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <RECIPIENT_ADDRESS>    The account address of recipient. , one of:\r\n                             * a base58-encoded public key\r\n                             * a path to a keypair file\r\n                             * a hyphen; signals a JSON-encoded keypair on stdin\r\n                             * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                             * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <AMOUNT>               The amount to send, in XZO accepts keyword ALL\r\nexzonetwork-validator-info#\r\nexzonetwork-validator-info\r\nPublish/get Validator info on exzonetwork\r\n\r\nUSAGE:\r\n    exzonetwork validator-info [FLAGS] [OPTIONS] <SUBCOMMAND>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nSUBCOMMANDS:\r\n    get        Get and parse Exzonetwork Validator info\r\n    help       Prints this message or the help of the given subcommand(s)\r\n    publish    Publish Validator info on exzonetwork\r\nexzonetwork-validators#\r\nexzonetwork-validators\r\nShow summary information about the current validators\r\n\r\nUSAGE:\r\n    exzonetwork validators [FLAGS] [OPTIONS]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --lamports                       Display balance in lamports instead of XZO\r\n        --no-address-labels              Do not use address labels in the output\r\n    -n, --number                         Number the validators\r\n    -r, --reverse                        Reverse order while sorting\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --sort <sort>                      Sort order (does not affect JSON output) [default: stake]  [possible values:\r\n                                           delinquent, commission, credits, identity, last-vote, root, skip-rate, stake,\r\n                                           vote-account]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\nexzonetwork-vote-account#\r\nexzonetwork-vote-account\r\nShow the contents of a vote account\r\n\r\nUSAGE:\r\n    exzonetwork vote-account [FLAGS] [OPTIONS] <VOTE_ACCOUNT_ADDRESS>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --lamports                       Display balance in lamports instead of XZO\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n        --with-rewards                   Display inflation rewards\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --num-rewards-epochs <NUM>         Display rewards for NUM recent epochs, max 10 [default: latest epoch only]\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <VOTE_ACCOUNT_ADDRESS>    Vote account pubkey. , one of:\r\n                                * a base58-encoded public key\r\n                                * a path to a keypair file\r\n                                * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                * a hardware wallet keypair URL (i.e. usb://ledger)\r\nezonetwork -vote-authorize-voter#\r\nexzonetwork-vote-authorize-voter\r\nAuthorize a new vote signing keypair for the given vote account\r\n\r\nUSAGE:\r\n    exzonetwork vote-authorize-voter [FLAGS] [OPTIONS] <VOTE_ACCOUNT_ADDRESS> <AUTHORIZED_KEYPAIR> <NEW_AUTHORIZED_PUBKEY>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --with-memo <MEMO>                 Specify a memo string to include in the transaction.\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <VOTE_ACCOUNT_ADDRESS>     Vote account in which to set the authorized voter. , one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <AUTHORIZED_KEYPAIR>       Current authorized vote signer.\r\n    <NEW_AUTHORIZED_PUBKEY>    New authorized vote signer. , one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-vote-authorize-withdrawer#\r\nexzonetwork-vote-authorize-withdrawer\r\nAuthorize a new withdraw signing keypair for the given vote account\r\n\r\nUSAGE:\r\n    exzonetwork vote-authorize-withdrawer [FLAGS] [OPTIONS] <VOTE_ACCOUNT_ADDRESS> <AUTHORIZED_KEYPAIR> <AUTHORIZED_PUBKEY>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --with-memo <MEMO>                 Specify a memo string to include in the transaction.\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <VOTE_ACCOUNT_ADDRESS>    Vote account in which to set the authorized withdrawer. , one of:\r\n                                * a base58-encoded public key\r\n                                * a path to a keypair file\r\n                                * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <AUTHORIZED_KEYPAIR>      Current authorized withdrawer.\r\n    <AUTHORIZED_PUBKEY>       New authorized withdrawer. , one of:\r\n                                * a base58-encoded public key\r\n                                * a path to a keypair file\r\n                                * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                * a hardware wallet keypair URL (i.e. usb://ledger)\r\nexzonetwork-vote-update-commission#\r\nexzonetwork-vote-update-commission\r\nUpdate the vote accounts commission\r\n\r\nUSAGE:\r\n    exzonetwork vote-update-commission [FLAGS] [OPTIONS] <VOTE_ACCOUNT_ADDRESS> <PERCENTAGE> <AUTHORIZED_KEYPAIR>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --with-memo <MEMO>                 Specify a memo string to include in the transaction.\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <VOTE_ACCOUNT_ADDRESS>    Vote account to update. , one of:\r\n                                * a base58-encoded public key\r\n                                * a path to a keypair file\r\n                                * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <PERCENTAGE>              The new commission\r\n    <AUTHORIZED_KEYPAIR>      Authorized withdrawer keypair\r\nexzonetwork-vote-update-validator#\r\nexzonetwork-vote-update-validator\r\nUpdate the vote accounts validator identity\r\n\r\nUSAGE:\r\n    exzonetwork vote-update-validator [FLAGS] [OPTIONS] <VOTE_ACCOUNT_ADDRESS> <IDENTITY_KEYPAIR> <AUTHORIZED_KEYPAIR>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --with-memo <MEMO>                 Specify a memo string to include in the transaction.\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <VOTE_ACCOUNT_ADDRESS>    Vote account to update. , one of:\r\n                                * a base58-encoded public key\r\n                                * a path to a keypair file\r\n                                * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <IDENTITY_KEYPAIR>        Keypair of new validator that will vote with this account\r\n    <AUTHORIZED_KEYPAIR>      Authorized withdrawer keypair\r\nexzonetwork-wait-for-max-stake#\r\nexzonetwork-wait-for-max-stake\r\nWait for the max stake of any one node to drop below a percentage of total.\r\n\r\nUSAGE:\r\n    exzonetwork wait-for-max-stake [FLAGS] [OPTIONS] [PERCENT]\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <PERCENT>\r\nexzonetwork-withdraw-from-nonce-account#\r\nexzonetwork-withdraw-from-nonce-account\r\nWithdraw XZO from the nonce account\r\n\r\nUSAGE:\r\n    exzonetwork withdraw-from-nonce-account [FLAGS] [OPTIONS] <NONCE_ACCOUNT_ADDRESS> <RECIPIENT_ADDRESS> <AMOUNT>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --nonce-authority <KEYPAIR>        Provide the nonce authority keypair to use when signing a nonced transaction\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <NONCE_ACCOUNT_ADDRESS>    Nonce account to withdraw from. , one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <RECIPIENT_ADDRESS>        The account to which the XZO should be transferred. , one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <AMOUNT>                   The amount to withdraw from the nonce account, in XZO\r\nexzonetwork-withdraw-from-vote-account#\r\nexzonetwork-withdraw-from-vote-account\r\nWithdraw lamports from a vote account into a specified account\r\n\r\nUSAGE:\r\n    Exzonetwork withdraw-from-vote-account [FLAGS] [OPTIONS] <VOTE_ACCOUNT_ADDRESS> <RECIPIENT_ADDRESS> <AMOUNT>\r\n\r\nFLAGS:\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --authorized-withdrawer <AUTHORIZED_KEYPAIR>    Authorized withdrawer [default: cli config keypair]\r\n        --commitment <COMMITMENT_LEVEL>\r\n            Return information at the selected commitment level [possible values: processed, confirmed, finalized]\r\n\r\n    -C, --config <FILEPATH>\r\n            Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n\r\n    -u, --url <URL_OR_MONIKER>\r\n            URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta, testnet, devnet, localhost]\r\n\r\n    -k, --keypair <KEYPAIR>                             Filepath or URL to a keypair\r\n        --with-memo <MEMO>                              Specify a memo string to include in the transaction.\r\n        --output <FORMAT>\r\n            Return information in specified output format [possible values: json, json-compact]\r\n\r\n        --ws <URL>                                      WebSocket URL for the exzonetwork cluster\r\n\r\nARGS:\r\n    <VOTE_ACCOUNT_ADDRESS>    Vote account from which to withdraw. , one of:\r\n                                * a base58-encoded public key\r\n                                * a path to a keypair file\r\n                                * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <RECIPIENT_ADDRESS>       The recipient of withdrawn XZO. , one of:\r\n                                * a base58-encoded public key\r\n                                * a path to a keypair file\r\n                                * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <AMOUNT>                  The amount to withdraw, in XZO; accepts keyword ALL\r\nexzonetwork-withdraw-stake#\r\nexzonetwork-withdraw-stake\r\nWithdraw the unstaked XZO from the stake account\r\n\r\nUSAGE:\r\n    exzonetwork withdraw-stake [FLAGS] [OPTIONS] <STAKE_ACCOUNT_ADDRESS> <RECIPIENT_ADDRESS> <AMOUNT>\r\n\r\nFLAGS:\r\n        --dump-transaction-message       Display the base64 encoded binary transaction message in sign-only mode\r\n    -h, --help                           Prints help information\r\n        --no-address-labels              Do not use address labels in the output\r\n        --sign-only                      Sign the transaction offline\r\n        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39\r\n                                         official English word list\r\n    -V, --version                        Prints version information\r\n    -v, --verbose                        Show additional information\r\n\r\nOPTIONS:\r\n        --blockhash <BLOCKHASH>            Use the supplied blockhash\r\n        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:\r\n                                           processed, confirmed, finalized]\r\n    -C, --config <FILEPATH>                Configuration file to use [default: ~/.config/exzonetwork/cli/config.yml]\r\n        --custodian <KEYPAIR>              Authority to override account lockup\r\n        --fee-payer <KEYPAIR>              Specify the fee-payer account. This may be a keypair file, the ASK keyword\r\n                                           or the pubkey of an offline signer, provided an appropriate --signer argument\r\n                                           is also passed. Defaults to the client keypair.\r\n    -u, --url <URL_OR_MONIKER>             URL for Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,\r\n                                           testnet, devnet, localhost]\r\n    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair\r\n        --nonce <PUBKEY>                   Provide the nonce account to use when creating a nonced\r\n                                           transaction. Nonced transactions are useful when a transaction\r\n                                           requires a lengthy signing process. Learn more about nonced\r\n                                           transactions at https://docs.exzonetwork.com/cli/durable-nonce/\r\n        --nonce-authority <KEYPAIR>        Provide the nonce authority keypair to use when signing a nonced transaction\r\n        --output <FORMAT>                  Return information in specified output format [possible values: json, json-\r\n                                           compact]\r\n        --seed <STRING>                    Seed for address generation; if specified, the resulting account will be at a\r\n                                           derived address of STAKE_ACCOUNT_ADDRESS\r\n        --signer <PUBKEY=SIGNATURE>...     Provide a public-key/signature pair for the transaction\r\n        --ws <URL>                         WebSocket URL for the exzonetwork cluster\r\n        --withdraw-authority <KEYPAIR>     Authorized withdrawer [default: cli config keypair]\r\n\r\nARGS:\r\n    <STAKE_ACCOUNT_ADDRESS>    Stake account from which to withdraw (or base of derived address if --seed is used).\r\n                               , one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <RECIPIENT_ADDRESS>        Recipient of withdrawn XZO, one of:\r\n                                 * a base58-encoded public key\r\n                                 * a path to a keypair file\r\n                                 * a hyphen; signals a JSON-encoded keypair on stdin\r\n                                 * the 'ASK' keyword; to recover a keypair via its seed phrase\r\n                                 * a hardware wallet keypair URL (i.e. usb://ledger)\r\n    <AMOUNT>                   The amount to withdraw from the stake account, in XZO; accepts keyword ALL\n",children:(0,a.jsx)(o.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">exzonetwork-cli 0.3.6 (src:9e42883d</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> feat:2960423209)</span></span>\n<span><span style="color: var(--shiki-color-text)">Blockchain, Rebuilt </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Scale</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SUBCOMMAND</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">SUBCOMMANDS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    account                        Show the contents of an account</span></span>\n<span><span style="color: var(--shiki-color-text)">    address                        Get your public key</span></span>\n<span><span style="color: var(--shiki-color-text)">    airdrop                        Request lamports</span></span>\n<span><span style="color: var(--shiki-color-text)">    authorize-nonce-account        Assign account authority to a new entity</span></span>\n<span><span style="color: var(--shiki-color-text)">    balance                        Get your balance</span></span>\n<span><span style="color: var(--shiki-color-text)">    block                          Get a confirmed block</span></span>\n<span><span style="color: var(--shiki-color-text)">    block-height                   Get current block height</span></span>\n<span><span style="color: var(--shiki-color-text)">    block-production               Show information about block production</span></span>\n<span><span style="color: var(--shiki-color-text)">    block-time                     Get estimated production </span><span style="color: var(--shiki-token-keyword)">time</span><span style="color: var(--shiki-color-text)"> of a block</span></span>\n<span><span style="color: var(--shiki-color-text)">    catchup                        Wait </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> a validator to catch up to the cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">    cluster-date                   Get current cluster date, computed from genesis creation </span><span style="color: var(--shiki-token-keyword)">time</span><span style="color: var(--shiki-color-text)"> and network </span><span style="color: var(--shiki-token-keyword)">time</span></span>\n<span><span style="color: var(--shiki-color-text)">    cluster-version                Get the version of the cluster entrypoint</span></span>\n<span><span style="color: var(--shiki-color-text)">    config                         Exzonetwork command-line tool configuration settings</span></span>\n<span><span style="color: var(--shiki-color-text)">    confirm                        Confirm transaction by signature</span></span>\n<span><span style="color: var(--shiki-color-text)">    create-address-with-seed       Generate a derived account address with a seed</span></span>\n<span><span style="color: var(--shiki-color-text)">    create-nonce-account           Create a nonce account</span></span>\n<span><span style="color: var(--shiki-color-text)">    create-stake-account           Create a stake account</span></span>\n<span><span style="color: var(--shiki-color-text)">    create-vote-account            Create a vote account</span></span>\n<span><span style="color: var(--shiki-color-text)">    deactivate-stake               Deactivate the delegated stake from the stake account</span></span>\n<span><span style="color: var(--shiki-color-text)">    decode-transaction             Decode a serialized transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">    delegate-stake                 Delegate stake to a vote account</span></span>\n<span><span style="color: var(--shiki-color-text)">    deploy                         Deploy a program</span></span>\n<span><span style="color: var(--shiki-color-text)">    epoch                          Get current epoch</span></span>\n<span><span style="color: var(--shiki-color-text)">    epoch-info                     Get information about the current epoch</span></span>\n<span><span style="color: var(--shiki-color-text)">    feature                        Runtime feature management</span></span>\n<span><span style="color: var(--shiki-color-text)">    fees                           Display current cluster fees</span></span>\n<span><span style="color: var(--shiki-color-text)">    first-available-block          Get the first available block </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the storage</span></span>\n<span><span style="color: var(--shiki-color-text)">    genesis-hash                   Get the genesis </span><span style="color: var(--shiki-token-function)">hash</span></span>\n<span><span style="color: var(--shiki-color-text)">    gossip                         Show the current gossip network nodes</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)">                           Prints this message or the </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> of the given subcommand(s)</span></span>\n<span><span style="color: var(--shiki-color-text)">    inflation                      Show inflation information</span></span>\n<span><span style="color: var(--shiki-color-text)">    largest-accounts               Get addresses of largest cluster accounts</span></span>\n<span><span style="color: var(--shiki-color-text)">    leader-schedule                Display leader schedule</span></span>\n<span><span style="color: var(--shiki-color-text)">    live-slots                     Show information about the current slot progression</span></span>\n<span><span style="color: var(--shiki-color-text)">    logs                           Stream transaction logs</span></span>\n<span><span style="color: var(--shiki-color-text)">    merge-stake                    Merges one stake account into another</span></span>\n<span><span style="color: var(--shiki-color-text)">    new-nonce                      Generate a new nonce, rendering the existing nonce useless</span></span>\n<span><span style="color: var(--shiki-color-text)">    nonce                          Get the current nonce value</span></span>\n<span><span style="color: var(--shiki-color-text)">    nonce-account                  Show the contents of a nonce account</span></span>\n<span><span style="color: var(--shiki-color-text)">    ping                           Submit transactions sequentially</span></span>\n<span><span style="color: var(--shiki-color-text)">    program                        Program management</span></span>\n<span><span style="color: var(--shiki-color-text)">    rent                           Calculate per-epoch and rent-exempt-minimum values </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> a given account data</span></span>\n<span><span style="color: var(--shiki-color-text)">                                   length.</span></span>\n<span><span style="color: var(--shiki-color-text)">    resolve-signer                 Checks that a signer is valid, and returns its specific path</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> useful </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> signers</span></span>\n<span><span style="color: var(--shiki-color-text)">                                   that may be specified generally, eg. usb://ledger</span></span>\n<span><span style="color: var(--shiki-color-text)">    slot                           Get current slot</span></span>\n<span><span style="color: var(--shiki-color-text)">    split-stake                    Duplicate a stake account, splitting the tokens between the two</span></span>\n<span><span style="color: var(--shiki-color-text)">    stake-account                  Show the contents of a stake account</span></span>\n<span><span style="color: var(--shiki-color-text)">    stake-authorize                Authorize a new signing keypair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the given stake account</span></span>\n<span><span style="color: var(--shiki-color-text)">    stake-history                  Show the stake </span><span style="color: var(--shiki-token-function)">history</span></span>\n<span><span style="color: var(--shiki-color-text)">    stake-set-lockup               Set Lockup </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the stake account</span></span>\n<span><span style="color: var(--shiki-color-text)">    stakes                         Show stake account information</span></span>\n<span><span style="color: var(--shiki-color-text)">    supply                         Get information about the cluster supply of XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">    transaction-count              Get current transaction count</span></span>\n<span><span style="color: var(--shiki-color-text)">    transaction-history            Show historical transactions affecting the given address from newest to oldest</span></span>\n<span><span style="color: var(--shiki-color-text)">    transfer                       Transfer funds between system accounts</span></span>\n<span><span style="color: var(--shiki-color-text)">    validator-info                 Publish/get Validator info on Exzonetwork</span></span>\n<span><span style="color: var(--shiki-color-text)">    validators                     Show summary information about the current validators</span></span>\n<span><span style="color: var(--shiki-color-text)">    vote-account                   Show the contents of a vote account</span></span>\n<span><span style="color: var(--shiki-color-text)">    vote-authorize-voter           Authorize a new vote signing keypair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the given vote account</span></span>\n<span><span style="color: var(--shiki-color-text)">    vote-authorize-withdrawer      Authorize a new withdraw signing keypair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the given vote account</span></span>\n<span><span style="color: var(--shiki-color-text)">    vote-update-commission         Update the vote accounts commission</span></span>\n<span><span style="color: var(--shiki-color-text)">    vote-update-validator          Update the vote accounts validator identity</span></span>\n<span><span style="color: var(--shiki-color-text)">    wait-for-max-stake             Wait </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the max stake of any one node to drop below a percentage of total.</span></span>\n<span><span style="color: var(--shiki-color-text)">    withdraw-from-nonce-account    Withdraw XZO from the nonce account</span></span>\n<span><span style="color: var(--shiki-color-text)">    withdraw-from-vote-account     Withdraw lamports from a vote account into a specified account</span></span>\n<span><span style="color: var(--shiki-color-text)">    withdraw-stake                 Withdraw the unstaked XZO from the stake account</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-account#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-account</span></span>\n<span><span style="color: var(--shiki-color-text)">Show the contents of an account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork account [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --lamports                       Display balance </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> lamports instead of XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetworks JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">    -o, --output-file </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">           Write the account data to this file</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Account key URI. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                           </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                           </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                           </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                           </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                           </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-address#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-address</span></span>\n<span><span style="color: var(--shiki-color-text)">Get your public key</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork address [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --confirm-key                    Confirm key on device</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> only relevant </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> using remote wallet</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-airdrop#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-airdrop</span></span>\n<span><span style="color: var(--shiki-color-text)">Request lamports</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork airdrop [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> [RECIPIENT_ADDRESS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --faucet-host </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Faucet host to use [default: the --url host]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --faucet-port </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PORT_NUMBER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Faucet port to use [default: 9900]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetworks JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">               The airdrop amount to request, </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> XZO    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RECIPIENT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    The account address of airdrop recipient. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-authorize-nonce-account#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-authorize-nonce-account</span></span>\n<span><span style="color: var(--shiki-color-text)">Assign account authority to a new entity</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzo authorize-nonce-account [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NONCE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AUTHORITY_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Provide the nonce authority keypair to use when signing a nonced transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NONCE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Address of the nonce account. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AUTHORITY_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">         Account to be granted authority of the nonce account. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-balance#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-balance</span></span>\n<span><span style="color: var(--shiki-color-text)">Get your balance</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork balance [FLAGS] [OPTIONS] [ACCOUNT_ADDRESS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --lamports                       Display balance </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> lamports instead of XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    The account address of the balance to check. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                           </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                           </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                           </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                           </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                           </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-block#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-block</span></span>\n<span><span style="color: var(--shiki-color-text)">Get a confirmed block</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork block [FLAGS] [OPTIONS] [SLOT]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SLOT</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-block-height#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-block-height</span></span>\n<span><span style="color: var(--shiki-color-text)">Get current block height</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork block-height [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-block-production#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-block-production</span></span>\n<span><span style="color: var(--shiki-color-text)">Show information about block production</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork block-production [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --epoch </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">epoch</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                    Epoch to show block production </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> [default: current epoch]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --slot-limit </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">slot_limit</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">          Limit results to this many slots from the end of the epoch [default: full</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           epoch]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-block-time#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-block-time</span></span>\n<span><span style="color: var(--shiki-color-text)">Get estimated production </span><span style="color: var(--shiki-token-keyword)">time</span><span style="color: var(--shiki-color-text)"> of a block</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork block-time [FLAGS] [OPTIONS] [SLOT]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SLOT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Slot number of the block to query</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-catchup#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-catchup</span></span>\n<span><span style="color: var(--shiki-color-text)">Wait </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> a validator to catch up to the cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork catchup [FLAGS] [OPTIONS] [ARGS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --follow                         Continue reporting progress even after the validator has caught up</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --log                            Do not update the progress inplace</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> instead show updates with its own new lines</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --our-localhost </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PORT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             Guess Identity pubkey and validator rpc node assuming </span><span style="color: var(--shiki-token-keyword)">local</span><span style="color: var(--shiki-color-text)"> (possibly</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           private) validator [default: 8899]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">OUR_VALIDATOR_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Identity pubkey of the validator, one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">OUR_URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                 JSON RPC URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> validator, which is useful </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> validators with a private RPC service</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-cluster-date#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-cluster-date</span></span>\n<span><span style="color: var(--shiki-color-text)">Get current cluster date, computed from genesis creation </span><span style="color: var(--shiki-token-keyword)">time</span><span style="color: var(--shiki-color-text)"> and network </span><span style="color: var(--shiki-token-keyword)">time</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork cluster-date [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-cluster-version#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork -cluster-version</span></span>\n<span><span style="color: var(--shiki-color-text)">Get the version of the cluster entrypoint</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork cluster-version [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-config#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork -config</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork command-line tool configuration settings</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork config [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SUBCOMMAND</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">SUBCOMMANDS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    export-address-labels    Export the current address labels</span></span>\n<span><span style="color: var(--shiki-color-text)">    get                      Get current config settings</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)">                     Prints this message or the </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> of the given subcommand(s)</span></span>\n<span><span style="color: var(--shiki-color-text)">    import-address-labels    Import a list of address labels</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">set</span><span style="color: var(--shiki-color-text)">                      Set a config setting</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-confirm#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork -confirm</span></span>\n<span><span style="color: var(--shiki-color-text)">Confirm transaction by signature</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork confirm [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">TRANSACTION_SIGNATURE</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetworks JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">TRANSACTION_SIGNATURE</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    The transaction signature to confirm</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">Note: This will show more detailed information </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> finalized transactions with verbose mode (-v/--verbose).</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">Account modes:</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)">srwx</span><span style="color: var(--shiki-token-keyword)">|</span></span>\n<span><span style="color: var(--shiki-color-text)">    s: signed</span></span>\n<span><span style="color: var(--shiki-color-text)">    r: readable (always true)</span></span>\n<span><span style="color: var(--shiki-color-text)">    w: writable</span></span>\n<span><span style="color: var(--shiki-color-text)">    x: program account (inner instructions excluded)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-create-address-with-seed#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork -create-address-with-seed</span></span>\n<span><span style="color: var(--shiki-color-text)">Generate a derived account address with a seed</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork create-address-with-seed [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SEED_STRING</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_ID</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --from </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FROM_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">               From (base) key, [default: cli config keypair]. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SEED_STRING</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    The seed.  Must not take more than 32 bytes to encode as utf-8</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_ID</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">     The program_id that the address will ultimately be used for,</span></span>\n<span><span style="color: var(--shiki-color-text)">                     or one of NONCE, STAKE, and VOTE keywords</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-create-nonce-account#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork -create-nonce-account</span></span>\n<span><span style="color: var(--shiki-color-text)">Create a nonce account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork create-nonce-account [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ACCOUNT_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">         Assign noncing authority to another entity. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --seed </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STRING</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                    Seed </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> address generation</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> specified, the resulting account will be at a</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           derived address of the NONCE_ACCOUNT pubkey</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ACCOUNT_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Keypair of the nonce account to fund</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             The amount to load the nonce account with, </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> XZO</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> accepts keyword ALL</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-create-stake-account#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork -create-stake-account</span></span>\n<span><span style="color: var(--shiki-color-text)">Create a stake account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork create-stake-account [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --dump-transaction-message       Display the base64 encoded binary transaction message </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> sign-only mode</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --sign-only                      Sign the transaction offline</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --blockhash </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BLOCKHASH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             Use the supplied blockhash</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">     Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                 Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --custodian </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Authority to modify lockups. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">        --fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">               Specify the fee-payer account. This may be a keypair file, the ASK keyword</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            or the pubkey of an offline signer, provided an appropriate --signer</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            argument</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            is also passed. Defaults to the client keypair.</span></span>\n<span><span style="color: var(--shiki-color-text)">        --from </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                    Source account of funds [default: cli config keypair]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">              URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                 Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --lockup-date </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RFC3339 DATETIME</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    The date and </span><span style="color: var(--shiki-token-keyword)">time</span><span style="color: var(--shiki-color-text)"> at which this account will be available </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> withdrawal</span></span>\n<span><span style="color: var(--shiki-color-text)">        --lockup-epoch </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NUMBER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             The epoch height at which this account will be available </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> withdrawal</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                    Provide the nonce account to use when creating a nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            transaction. Nonced transactions are useful when a transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            requires a lengthy signing process. Learn more about nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            transactions at https://docs. exzonetwork.com/cli/durable-nonce/</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">         Provide the nonce authority keypair to use when signing a nonced transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                   Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --seed </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STRING</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                     Seed </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> address generation</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> specified, the resulting account will be at</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            a derived address of the STAKE_ACCOUNT_KEYPAIR pubkey</span></span>\n<span><span style="color: var(--shiki-color-text)">        --signer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY=SIGNATURE</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">...      Provide a public-key/signature pair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">          Authorized staker [default: cli config keypair]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                          WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">        --withdraw-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">       Authorized withdrawer [default: cli config keypair]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Stake account to create (or base of derived address </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> --seed is used)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                   The amount to send to the stake account, </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> XZO</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> accepts keyword ALL</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-create-vote-account#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork -create-vote-account</span></span>\n<span><span style="color: var(--shiki-color-text)">Create a vote account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork create-vote-account [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ACCOUNT_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">IDENTITY_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --authorized-voter </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTER_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">            Public key of the authorized voter [default: validator identity pubkey]. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">        --authorized-withdrawer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">WITHDRAWER_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">            Public key of the authorized withdrawer [default: validator identity pubkey]. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commission </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PERCENTAGE</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                      The commission taken on reward redemption (0-100) [default: 100]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">            Return information at the selected commitment level [possible values: processed, confirmed, finalized]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">            Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">            URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta, testnet, devnet, localhost]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                            Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --with-memo </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">MEMO</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                             Specify a memo string to include </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the transaction.</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">            Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-compact]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">        --seed </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STRING</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">            Seed </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> address generation</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> specified, the resulting account will be at a derived address of the VOTE</span></span>\n<span><span style="color: var(--shiki-color-text)">            ACCOUNT pubkey</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                                     WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ACCOUNT_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">     Vote account keypair to create</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">IDENTITY_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Keypair of validator that will vote with this account</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-deactivate-stake#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-deactivate-stake</span></span>\n<span><span style="color: var(--shiki-color-text)">Deactivate the delegated stake from the stake account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork deactivate-stake [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --dump-transaction-message       Display the base64 encoded binary transaction message </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> sign-only mode</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --sign-only                      Sign the transaction offline</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --blockhash </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BLOCKHASH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">            Use the supplied blockhash</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">              Specify the fee-payer account. This may be a keypair file, the ASK keyword</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           or the pubkey of an offline signer, provided an appropriate --signer argument</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           is also passed. Defaults to the client keypair.</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                   Provide the nonce account to use when creating a nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           transaction. Nonced transactions are useful when a transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           requires a lengthy signing process. Learn more about nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           transactions at https://docs.exzonetwork.com/cli/durable-nonce/</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Provide the nonce authority keypair to use when signing a nonced transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --seed </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STRING</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                    Seed </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> address generation</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> specified, the resulting account will be at a</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           derived address of STAKE_ACCOUNT_ADDRESS</span></span>\n<span><span style="color: var(--shiki-color-text)">        --signer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY=SIGNATURE</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">...     Provide a public-key/signature pair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Authorized staker [default: cli config keypair]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Stake account to be deactivated (or base of derived address </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> --seed is used). , one</span></span>\n<span><span style="color: var(--shiki-color-text)">                               of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-decode-transaction#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-decode-transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">Decode a serialized transaction</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork decode-transaction [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">TRANSACTION</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ENCODING</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">TRANSACTION</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    transaction to decode</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ENCODING</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">       transaction encoding [default: base58]  [possible values: base58, base64]</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-delegate-stake#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-delegate-stake</span></span>\n<span><span style="color: var(--shiki-color-text)">Delegate stake to a vote account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork delegate-stake [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --dump-transaction-message       Display the base64 encoded binary transaction message </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> sign-only mode</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --sign-only                      Sign the transaction offline</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --blockhash </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BLOCKHASH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">            Use the supplied blockhash</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">              Specify the fee-payer account. This may be a keypair file, the ASK keyword</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           or the pubkey of an offline signer, provided an appropriate --signer argument</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           is also passed. Defaults to the client keypair.</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                   Provide the nonce account to use when creating a nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           transaction. Nonced transactions are useful when a transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           requires a lengthy signing process. Learn more about nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           transactions at https://docs.exzonetwork.com/cli/durable-nonce/</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Provide the nonce authority keypair to use when signing a nonced transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --signer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY=SIGNATURE</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">...     Provide a public-key/signature pair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Authorized staker [default: cli config keypair]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Stake account to delegate, one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">     The vote account to which the stake will be delegated, one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-deploy#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-deploy</span></span>\n<span><span style="color: var(--shiki-color-text)">Deploy a program</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork deploy [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> [PROGRAM_ADDRESS_SIGNER]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --allow-excessive-deploy-account-balance</span></span>\n<span><span style="color: var(--shiki-color-text)">            Use the designated program id, even </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> the account already holds a large balance of XZO</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                                      Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels                         Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation</span></span>\n<span><span style="color: var(--shiki-color-text)">            Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39 official English word list</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                                   Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                                   Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">          /path/to/program.o</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PROGRAM_ADDRESS_SIGNER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    The signer </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the desired address of the program [default: new random address]</span></span>\n<span><span style="color: var(--shiki-color-text)">exnonetwork-epoch#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork -epoch</span></span>\n<span><span style="color: var(--shiki-color-text)">Get current epoch</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork epoch [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-epoch-info#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-epoch-info</span></span>\n<span><span style="color: var(--shiki-color-text)">Get information about the current epoch</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork epoch-info [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">Exzonetwork-feature#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-feature</span></span>\n<span><span style="color: var(--shiki-color-text)">Runtime feature management</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork feature [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SUBCOMMAND</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">SUBCOMMANDS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    activate    Activate a runtime feature</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)">        Prints this message or the </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> of the given subcommand(s)</span></span>\n<span><span style="color: var(--shiki-color-text)">    status      Query runtime feature status</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-fees#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-fees</span></span>\n<span><span style="color: var(--shiki-color-text)">Display current cluster fees</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork fees [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --blockhash </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BLOCKHASH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">            Query fees </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> BLOCKHASH instead of the the most recent blockhash</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-first-available-block#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-first-available-block</span></span>\n<span><span style="color: var(--shiki-color-text)">Get the first available block </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the storage</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork first-available-block [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-genesis-hash#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-genesis-hash</span></span>\n<span><span style="color: var(--shiki-color-text)">Get the genesis </span><span style="color: var(--shiki-token-function)">hash</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork genesis-hash [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-gossip#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-gossip</span></span>\n<span><span style="color: var(--shiki-color-text)">Show the current gossip network nodes</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork gossip [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-help#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-help</span></span>\n<span><span style="color: var(--shiki-color-text)">Prints this message or the </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> of the given subcommand(s)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> [subcommand]...</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">subcommand</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">...    The subcommand whose </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> message to display</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-inflation#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-inflation</span></span>\n<span><span style="color: var(--shiki-color-text)">Show inflation information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork inflation [FLAGS] [OPTIONS] [SUBCOMMAND]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">SUBCOMMANDS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)">       Prints this message or the </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> of the given subcommand(s)</span></span>\n<span><span style="color: var(--shiki-color-text)">    rewards    Show inflation rewards </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> a </span><span style="color: var(--shiki-token-function)">set</span><span style="color: var(--shiki-color-text)"> of addresses</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-largest-accounts#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-largest-accounts</span></span>\n<span><span style="color: var(--shiki-color-text)">Get addresses of largest cluster accounts</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork largest-accounts [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --circulating                    Filter address list to only circulating accounts</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --non-circulating                Filter address list to only non-circulating accounts</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-leader-schedule#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-leader-schedule</span></span>\n<span><span style="color: var(--shiki-color-text)">Display leader schedule</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork leader-schedule [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --epoch </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">EPOCH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                    Epoch to show leader schedule for. (default: current)</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-live-slots#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-live-slots</span></span>\n<span><span style="color: var(--shiki-color-text)">Show information about the current slot progression</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork live-slots [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">Exzonetwork-logs#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-logs</span></span>\n<span><span style="color: var(--shiki-color-text)">Stream transaction logs</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork logs [FLAGS] [OPTIONS] [ADDRESS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --include-votes                  Include vote transactions when monitoring all transactions</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Account address to monitor [default: monitor all transactions except </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> votes] , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-merge-stake#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-merge-stake</span></span>\n<span><span style="color: var(--shiki-color-text)">Merges one stake account into another</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork merge-stake [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SOURCE_STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --dump-transaction-message       Display the base64 encoded binary transaction message </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> sign-only mode</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --sign-only                      Sign the transaction offline</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --blockhash </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BLOCKHASH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">            Use the supplied blockhash</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">              Specify the fee-payer account. This may be a keypair file, the ASK keyword</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           or the pubkey of an offline signer, provided an appropriate --signer argument</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           is also passed. Defaults to the client keypair.</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                   Provide the nonce account to use when creating a nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           transaction. Nonced transactions are useful when a transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           requires a lengthy signing process. Learn more about nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           transactions at https://docs.exzonetwork.com/cli/durable-nonce/</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Provide the nonce authority keypair to use when signing a nonced transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --signer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY=SIGNATURE</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">...     Provide a public-key/signature pair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Authorized staker [default: cli config keypair]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">           Stake account to merge into, one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                        </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                        </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                        </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                        </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                        </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SOURCE_STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Source stake account </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the merge.  If successful, this stake account will no</span></span>\n<span><span style="color: var(--shiki-color-text)">                                      longer exist after the merge, one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                        </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                        </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                        </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                        </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                        </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-new-nonce#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-new-nonce</span></span>\n<span><span style="color: var(--shiki-color-text)">Generate a new nonce, rendering the existing nonce useless</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork new-nonce [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NONCE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Provide the nonce authority keypair to use when signing a nonced transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NONCE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Address of the nonce account. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-nonce#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-nonce</span></span>\n<span><span style="color: var(--shiki-color-text)">Get the current nonce value</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork nonce [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NONCE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NONCE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Address of the nonce account to display. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-nonce-account#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-nonce-account</span></span>\n<span><span style="color: var(--shiki-color-text)">Show the contents of a nonce account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork nonce-account [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NONCE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --lamports                       Display balance </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> lamports instead of XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NONCE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Address of the nonce account to display. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork -ping#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-ping</span></span>\n<span><span style="color: var(--shiki-color-text)">Submit transactions sequentially</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork ping [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">    -D, --print-timestamp                Print timestamp (unix </span><span style="color: var(--shiki-token-keyword)">time</span><span style="color: var(--shiki-color-text)"> + microseconds as </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> gettimeofday) before each line</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --blockhash </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BLOCKHASH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">            Use the supplied blockhash</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -c, --count </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NUMBER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                   Stop after submitting count transactions</span></span>\n<span><span style="color: var(--shiki-color-text)">    -i, --interval </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SECONDS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">               Wait interval seconds between submitting the next transaction [default: 2]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --lamports </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NUMBER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Number of lamports to transfer </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> each transaction [default: 1]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -t, --timeout </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SECONDS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Wait up to timeout seconds </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> transaction confirmation [default: 15]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-program#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-program</span></span>\n<span><span style="color: var(--shiki-color-text)">Program management</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork program [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SUBCOMMAND</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">SUBCOMMANDS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    close                    Close an acount and withdraw all lamports</span></span>\n<span><span style="color: var(--shiki-color-text)">    deploy                   Deploy a program</span></span>\n<span><span style="color: var(--shiki-color-text)">    dump                     Write the program data to a file</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)">                     Prints this message or the </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> of the given subcommand(s)</span></span>\n<span><span style="color: var(--shiki-color-text)">    set-buffer-authority     Set a new buffer authority</span></span>\n<span><span style="color: var(--shiki-color-text)">    set-upgrade-authority    Set a new program authority</span></span>\n<span><span style="color: var(--shiki-color-text)">    show                     Display information about a buffer or program</span></span>\n<span><span style="color: var(--shiki-color-text)">    write-buffer             Writes a program into a buffer account</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-rent#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-rent</span></span>\n<span><span style="color: var(--shiki-color-text)">Calculate per-epoch and rent-exempt-minimum values </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> a given account data length.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork rent [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">DATA_LENGTH_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --lamports                       Display rent </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> lamports instead of XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">DATA_LENGTH_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Length of data </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the account to calculate rent for, or moniker: [nonce, stake,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                system, vote]</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-resolve-signer#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-resolve-signer</span></span>\n<span><span style="color: var(--shiki-color-text)">Checks that a signer is valid, and returns its specific path</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> useful </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> signers that may be specified generally, eg.</span></span>\n<span><span style="color: var(--shiki-color-text)">usb://ledger</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    Exzonetwork resolve-signer [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SIGNER_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SIGNER_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    The signer path to resolve</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-slot#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-slot</span></span>\n<span><span style="color: var(--shiki-color-text)">Get current slot</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork slot [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-split-stake#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-split-stake</span></span>\n<span><span style="color: var(--shiki-color-text)">Duplicate a stake account, splitting the tokens between the two</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    Exzonetwork split-stake [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SPLIT_STAKE_ACCOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --dump-transaction-message       Display the base64 encoded binary transaction message </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> sign-only mode</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --sign-only                      Sign the transaction offline</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --blockhash </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BLOCKHASH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">            Use the supplied blockhash</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">              Specify the fee-payer account. This may be a keypair file, the ASK keyword</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           or the pubkey of an offline signer, provided an appropriate --signer argument</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           is also passed. Defaults to the client keypair.</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                   Provide the nonce account to use when creating a nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           transaction. Nonced transactions are useful when a transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           requires a lengthy signing process. Learn more about nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           transactions at https://docs.exzonetwork.com/cli/durable-nonce/</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Provide the nonce authority keypair to use when signing a nonced transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --seed </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STRING</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                    Seed </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> address generation</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> specified, the resulting account will be at a</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           derived address of SPLIT_STAKE_ACCOUNT</span></span>\n<span><span style="color: var(--shiki-color-text)">        --signer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY=SIGNATURE</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">...     Provide a public-key/signature pair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Authorized staker [default: cli config keypair]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Stake account to split (or base of derived address </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> --seed is used). , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SPLIT_STAKE_ACCOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">      Keypair of the new stake account</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                   The amount to move into the new stake account, </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-account#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-account</span></span>\n<span><span style="color: var(--shiki-color-text)">Show the contents of a stake account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork stake-account [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --lamports                       Display balance </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> lamports instead of XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --with-rewards                   Display inflation rewards</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --num-rewards-epochs </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NUM</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">         Display rewards </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> NUM recent epochs, max 10 [default: latest epoch only]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    The stake account to display. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-authorize#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-authorize</span></span>\n<span><span style="color: var(--shiki-color-text)">Authorize a new signing keypair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the given stake account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    Exzonetwork stake-authorize [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --new-stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> --new-withdraw-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --dump-transaction-message       Display the base64 encoded binary transaction message </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> sign-only mode</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --sign-only                      Sign the transaction offline</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --blockhash </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BLOCKHASH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">              Use the supplied blockhash</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">      Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --custodian </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Authority to override account lockup</span></span>\n<span><span style="color: var(--shiki-color-text)">        --fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Specify the fee-payer account. This may be a keypair file, the ASK keyword</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             or the pubkey of an offline signer, provided an appropriate --signer</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             argument</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             is also passed. Defaults to the client keypair.</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">               URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             beta, testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --new-stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">       New authorized staker, one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                               </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                               </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                               </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                               </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                               </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">        --new-withdraw-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    New authorized withdrawer. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                               </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                               </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                               </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                               </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                               </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                     Provide the nonce account to use when creating a nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             transaction. Nonced transactions are useful when a transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             requires a lengthy signing process. Learn more about nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             transactions at https://docs.exzonetwork.com/cli/durable-nonce/</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">          Provide the nonce authority keypair to use when signing a nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                    Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --signer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY=SIGNATURE</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">...       Provide a public-key/signature pair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --stake-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">          Authorized staker [default: cli config keypair]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                           WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">        --withdraw-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">       Authorized withdrawer [default: cli config keypair]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Stake account </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> which to </span><span style="color: var(--shiki-token-function)">set</span><span style="color: var(--shiki-color-text)"> a new authority. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-history#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-history</span></span>\n<span><span style="color: var(--shiki-color-text)">Show the stake </span><span style="color: var(--shiki-token-function)">history</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork stake-history [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --lamports                       Display balance </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> lamports instead of XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --limit </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NUM</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                      Display NUM recent epochs worth of stake </span><span style="color: var(--shiki-token-function)">history</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> text mode. 0 </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> all</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           [default: 10]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-set-lockup#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-stake-set-lockup</span></span>\n<span><span style="color: var(--shiki-color-text)">Set Lockup </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the stake account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork stake-set-lockup [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">--lockup-epoch </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NUMBER</span><span style="color: var(--shiki-token-keyword)">&gt;|</span><span style="color: var(--shiki-color-text)">--lockup-date </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RFC3339 DATETIME</span><span style="color: var(--shiki-token-keyword)">&gt;|</span><span style="color: var(--shiki-color-text)">--new-custodian </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --dump-transaction-message       Display the base64 encoded binary transaction message </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> sign-only mode</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --sign-only                      Sign the transaction offline</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --blockhash </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BLOCKHASH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             Use the supplied blockhash</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">     Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                 Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --custodian </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">               Keypair of the existing custodian [default: cli config pubkey]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">               Specify the fee-payer account. This may be a keypair file, the ASK keyword</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            or the pubkey of an offline signer, provided an appropriate --signer</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            argument</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            is also passed. Defaults to the client keypair.</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">              URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                 Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --lockup-date </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RFC3339 DATETIME</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    The date and </span><span style="color: var(--shiki-token-keyword)">time</span><span style="color: var(--shiki-color-text)"> at which this account will be available </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> withdrawal</span></span>\n<span><span style="color: var(--shiki-color-text)">        --lockup-epoch </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NUMBER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             The epoch height at which this account will be available </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> withdrawal</span></span>\n<span><span style="color: var(--shiki-color-text)">        --new-custodian </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">            Identity of a new lockup custodian. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                              </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                    Provide the nonce account to use when creating a nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            transaction. Nonced transactions are useful when a transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            requires a lengthy signing process. Learn more about nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            transactions at https://docs.exzonetwork.com/cli/durable-nonce/</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">         Provide the nonce authority keypair to use when signing a nonced transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                   Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --signer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY=SIGNATURE</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">...      Provide a public-key/signature pair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                          WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Stake account </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> which to </span><span style="color: var(--shiki-token-function)">set</span><span style="color: var(--shiki-color-text)"> lockup parameters. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-stakes#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-stakes</span></span>\n<span><span style="color: var(--shiki-color-text)">Show stake account information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork stakes [FLAGS] [OPTIONS] [VOTE_ACCOUNT_PUBKEYS]...</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --lamports                       Display balance </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> lamports instead of XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_PUBKEYS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">...    Only show stake accounts delegated to the provided vote accounts. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-supply#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-supply</span></span>\n<span><span style="color: var(--shiki-color-text)">Get information about the cluster supply of XZO</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork supply [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --print-accounts                 Print list of non-circualting account addresses</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-transaction-count#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-transaction-count</span></span>\n<span><span style="color: var(--shiki-color-text)">Get current transaction count</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork transaction-count [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-transaction-history#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-transaction-history</span></span>\n<span><span style="color: var(--shiki-color-text)">Show historical transactions affecting the given address from newest to oldest</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork transaction-history [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --show-transactions              Display the full transactions</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --before </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">TRANSACTION_SIGNATURE</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Start with the first signature older than this one</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">     Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                 Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">              URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                 Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --limit </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">LIMIT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                     Maximum number of transaction signatures to </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> [default: 1000]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                   Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                            compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                          WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Account address, one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                   </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-transfer#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-transfer</span></span>\n<span><span style="color: var(--shiki-color-text)">Transfer funds between system accounts</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork transfer [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RECIPIENT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --allow-unfunded-recipient       Complete the transfer even </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> the recipient address is not funded</span></span>\n<span><span style="color: var(--shiki-color-text)">        --dump-transaction-message       Display the base64 encoded binary transaction message </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> sign-only mode</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-wait                        Return signature immediately after submitting the transaction, instead of</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         waiting </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> confirmations</span></span>\n<span><span style="color: var(--shiki-color-text)">        --sign-only                      Sign the transaction offline</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --blockhash </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BLOCKHASH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">            Use the supplied blockhash</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">              Specify the fee-payer account. This may be a keypair file, the ASK keyword</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           or the pubkey of an offline signer, provided an appropriate --signer argument</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           is also passed. Defaults to the client keypair.</span></span>\n<span><span style="color: var(--shiki-color-text)">        --from </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FROM_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">              Source account of funds (if different from client </span><span style="color: var(--shiki-token-keyword)">local</span><span style="color: var(--shiki-color-text)"> account). , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --with-memo </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">MEMO</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                 Specify a memo string to include </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the transaction.</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                   Provide the nonce account to use when creating a nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           transaction. Nonced transactions are useful when a transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           requires a lengthy signing process. Learn more about nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           transactions at https://docs.exzonetwork.com/cli/durable-nonce/</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Provide the nonce authority keypair to use when signing a nonced transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --signer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY=SIGNATURE</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">...     Provide a public-key/signature pair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RECIPIENT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    The account address of recipient. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                             </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">               The amount to send, </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> XZO accepts keyword ALL</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-validator-info#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-validator-info</span></span>\n<span><span style="color: var(--shiki-color-text)">Publish/get Validator info on exzonetwork</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork validator-info [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">SUBCOMMAND</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">SUBCOMMANDS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    get        Get and parse Exzonetwork Validator info</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)">       Prints this message or the </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> of the given subcommand(s)</span></span>\n<span><span style="color: var(--shiki-color-text)">    publish    Publish Validator info on exzonetwork</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-validators#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-validators</span></span>\n<span><span style="color: var(--shiki-color-text)">Show summary information about the current validators</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork validators [FLAGS] [OPTIONS]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --lamports                       Display balance </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> lamports instead of XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">    -n, --number                         Number the validators</span></span>\n<span><span style="color: var(--shiki-color-text)">    -r, --reverse                        Reverse order </span><span style="color: var(--shiki-token-keyword)">while</span><span style="color: var(--shiki-color-text)"> sorting</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --sort </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">sort</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                      Sort order (does not affect JSON output) [default: stake]  [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           delinquent, commission, credits, identity, last-vote, root, skip-rate, stake,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           vote-account]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-vote-account#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-vote-account</span></span>\n<span><span style="color: var(--shiki-color-text)">Show the contents of a vote account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork vote-account [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --lamports                       Display balance </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> lamports instead of XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --with-rewards                   Display inflation rewards</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --num-rewards-epochs </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NUM</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">         Display rewards </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> NUM recent epochs, max 10 [default: latest epoch only]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Vote account pubkey. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">ezonetwork -vote-authorize-voter#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-vote-authorize-voter</span></span>\n<span><span style="color: var(--shiki-color-text)">Authorize a new vote signing keypair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the given vote account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork vote-authorize-voter [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AUTHORIZED_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NEW_AUTHORIZED_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --with-memo </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">MEMO</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                 Specify a memo string to include </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the transaction.</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">     Vote account </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> which to </span><span style="color: var(--shiki-token-function)">set</span><span style="color: var(--shiki-color-text)"> the authorized voter. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AUTHORIZED_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">       Current authorized vote signer.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NEW_AUTHORIZED_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    New authorized vote signer. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-vote-authorize-withdrawer#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-vote-authorize-withdrawer</span></span>\n<span><span style="color: var(--shiki-color-text)">Authorize a new withdraw signing keypair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the given vote account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork vote-authorize-withdrawer [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AUTHORIZED_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AUTHORIZED_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --with-memo </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">MEMO</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                 Specify a memo string to include </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the transaction.</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Vote account </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> which to </span><span style="color: var(--shiki-token-function)">set</span><span style="color: var(--shiki-color-text)"> the authorized withdrawer. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AUTHORIZED_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">      Current authorized withdrawer.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AUTHORIZED_PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">       New authorized withdrawer. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-vote-update-commission#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-vote-update-commission</span></span>\n<span><span style="color: var(--shiki-color-text)">Update the vote accounts commission</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork vote-update-commission [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PERCENTAGE</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AUTHORIZED_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --with-memo </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">MEMO</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                 Specify a memo string to include </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the transaction.</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Vote account to update. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PERCENTAGE</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">              The new commission</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AUTHORIZED_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">      Authorized withdrawer keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-vote-update-validator#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-vote-update-validator</span></span>\n<span><span style="color: var(--shiki-color-text)">Update the vote accounts validator identity</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork vote-update-validator [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">IDENTITY_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AUTHORIZED_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --with-memo </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">MEMO</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                 Specify a memo string to include </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the transaction.</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Vote account to update. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">IDENTITY_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Keypair of new validator that will vote with this account</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AUTHORIZED_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">      Authorized withdrawer keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-wait-for-max-stake#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-wait-for-max-stake</span></span>\n<span><span style="color: var(--shiki-color-text)">Wait </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the max stake of any one node to drop below a percentage of total.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork wait-for-max-stake [FLAGS] [OPTIONS] [PERCENT]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PERCENT</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-withdraw-from-nonce-account#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-withdraw-from-nonce-account</span></span>\n<span><span style="color: var(--shiki-color-text)">Withdraw XZO from the nonce account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork withdraw-from-nonce-account [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NONCE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RECIPIENT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Provide the nonce authority keypair to use when signing a nonced transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">NONCE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Nonce account to withdraw from. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RECIPIENT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        The account to which the XZO should be transferred. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                   The amount to withdraw from the nonce account, </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> XZO</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-withdraw-from-vote-account#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-withdraw-from-vote-account</span></span>\n<span><span style="color: var(--shiki-color-text)">Withdraw lamports from a vote account into a specified account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    Exzonetwork withdraw-from-vote-account [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RECIPIENT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --authorized-withdrawer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AUTHORIZED_KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Authorized withdrawer [default: cli config keypair]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">            Return information at the selected commitment level [possible values: processed, confirmed, finalized]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">            Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">            URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta, testnet, devnet, localhost]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                             Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --with-memo </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">MEMO</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                              Specify a memo string to include </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the transaction.</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">            Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-compact]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                                      WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">VOTE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Vote account from which to withdraw. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RECIPIENT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">       The recipient of withdrawn XZO. , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  The amount to withdraw, </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> XZO</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> accepts keyword ALL</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-withdraw-stake#</span></span>\n<span><span style="color: var(--shiki-color-text)">exzonetwork-withdraw-stake</span></span>\n<span><span style="color: var(--shiki-color-text)">Withdraw the unstaked XZO from the stake account</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">USAGE:</span></span>\n<span><span style="color: var(--shiki-color-text)">    exzonetwork withdraw-stake [FLAGS] [OPTIONS] </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RECIPIENT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">FLAGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --dump-transaction-message       Display the base64 encoded binary transaction message </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> sign-only mode</span></span>\n<span><span style="color: var(--shiki-color-text)">    -h, --help                           Prints </span><span style="color: var(--shiki-token-function)">help</span><span style="color: var(--shiki-color-text)"> information</span></span>\n<span><span style="color: var(--shiki-color-text)">        --no-address-labels              Do not use address labels </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> the output</span></span>\n<span><span style="color: var(--shiki-color-text)">        --sign-only                      Sign the transaction offline</span></span>\n<span><span style="color: var(--shiki-color-text)">        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> your phrase does not use the BIP39</span></span>\n<span><span style="color: var(--shiki-color-text)">                                         official English word list</span></span>\n<span><span style="color: var(--shiki-color-text)">    -V, --version                        Prints version information</span></span>\n<span><span style="color: var(--shiki-color-text)">    -v, --verbose                        Show additional information</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">OPTIONS:</span></span>\n<span><span style="color: var(--shiki-color-text)">        --blockhash </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">BLOCKHASH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">            Use the supplied blockhash</span></span>\n<span><span style="color: var(--shiki-color-text)">        --commitment </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">COMMITMENT_LEVEL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Return information at the selected commitment level [possible values:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           processed, confirmed, finalized]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -C, --config </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FILEPATH</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Configuration file to use [default: </span><span style="color: var(--shiki-token-keyword)">~</span><span style="color: var(--shiki-color-text)">/.config/exzonetwork/cli/config.yml]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --custodian </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">              Authority to override account lockup</span></span>\n<span><span style="color: var(--shiki-color-text)">        --fee-payer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">              Specify the fee-payer account. This may be a keypair file, the ASK keyword</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           or the pubkey of an offline signer, provided an appropriate --signer argument</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           is also passed. Defaults to the client keypair.</span></span>\n<span><span style="color: var(--shiki-color-text)">    -u, --url </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL_OR_MONIKER</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">             URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> Exzonetwork’s JSON RPC or moniker (or their first letter): [mainnet-beta,</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           testnet, devnet, localhost]</span></span>\n<span><span style="color: var(--shiki-color-text)">    -k, --keypair </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                Filepath or URL to a keypair</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                   Provide the nonce account to use when creating a nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           transaction. Nonced transactions are useful when a transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           requires a lengthy signing process. Learn more about nonced</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           transactions at https://docs.exzonetwork.com/cli/durable-nonce/</span></span>\n<span><span style="color: var(--shiki-color-text)">        --nonce-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Provide the nonce authority keypair to use when signing a nonced transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --output </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">FORMAT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                  Return information </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> specified output format [possible values: json, json-</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           compact]</span></span>\n<span><span style="color: var(--shiki-color-text)">        --seed </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STRING</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                    Seed </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> address generation</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> specified, the resulting account will be at a</span></span>\n<span><span style="color: var(--shiki-color-text)">                                           derived address of STAKE_ACCOUNT_ADDRESS</span></span>\n<span><span style="color: var(--shiki-color-text)">        --signer </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PUBKEY=SIGNATURE</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">...     Provide a public-key/signature pair </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the transaction</span></span>\n<span><span style="color: var(--shiki-color-text)">        --ws </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">URL</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                         WebSocket URL </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> the exzonetwork cluster</span></span>\n<span><span style="color: var(--shiki-color-text)">        --withdraw-authority </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">KEYPAIR</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">     Authorized withdrawer [default: cli config keypair]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">ARGS:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">STAKE_ACCOUNT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">    Stake account from which to withdraw (or base of derived address </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> --seed is used).</span></span>\n<span><span style="color: var(--shiki-color-text)">                               , one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">RECIPIENT_ADDRESS</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">        Recipient of withdrawn XZO, one of:</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a base58-encoded public key</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a path to a keypair file</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hyphen</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> signals a JSON-encoded keypair on stdin</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> the </span><span style="color: var(--shiki-token-string-expression)">&#39;ASK&#39;</span><span style="color: var(--shiki-color-text)"> keyword</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> to recover a keypair via its seed phrase</span></span>\n<span><span style="color: var(--shiki-color-text)">                                 </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> a hardware wallet keypair URL (i.e. usb://ledger)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AMOUNT</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">                   The amount to withdraw from the stake account, </span><span style="color: var(--shiki-token-keyword)">in</span><span style="color: var(--shiki-color-text)"> XZO</span><span style="color: var(--shiki-token-keyword)">;</span><span style="color: var(--shiki-color-text)"> accepts keyword ALL</span></span>\n<span></span>'}),title:"Example"})]})}var c=!0,k=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:o}=Object.assign({},(0,e.ah)(),s.components);return o?(0,a.jsx)(o,Object.assign({},s,{children:(0,a.jsx)(p,s)})):p(s)}}},function(s){s.O(0,[675,774,888,179],function(){return s(s.s=6560)}),_N_E=s.O()}]);